{"version":3,"sources":["webpack:///./src/utils/chartist.ts","webpack:///./src/components/ChartWrapper/ChartWrapper.tsx","webpack:///./src/components/ChartWrapper/ChartWrapper.container.tsx","webpack:///./src/components/ChartWrapper/index.ts","webpack:///./node_modules/dom-to-image/src/dom-to-image.js","webpack:///./src/components/ChartWrapper/ChartWrapper.module.css"],"names":["isGrid","data","type","isYGrid","axis","units","pos","centerXLabel","areLabalesRotated","isLabel","isXLabel","element","attr","width","index","x","digitsCount","_node","textContent","length","ticks","lastLabelX","styleVerticalGrid","tickHeight","isFirstOneFull","isXGrid","y1","y2","removeHorizontalGridExceptLast","remove","ChartWrapper","render","this","props","children","labels","title","isIframeMode","onDownloadButtonClick","downloadAreaRef","iframePath","isSeparateLabels","centerTitle","labelOverrides","isFullWidth","className","cn","classes","chart","twoColumns","leftColumn","ref","Typography","font","center","variant","isUpperCased","legend","flexWrap","map","l","i","key","legendItem","height","String","fromCharCode","legendIcon","legendTitle","chartsContainer","footer","border","color","target","rel","href","actions","EmbedModal","DownloadButton","onClick","PureComponent","defaultProps","ChartWrapperContainer","React","createRef","handleDownloadButtonClick","a","current","isImageGenerationDebug","domtoimage","toSvg","dataUrl","img","Image","src","w","window","open","document","write","outerHTML","toPng","saveAs","downloadFilename","global","util","escape","string","replace","parseExtension","mimeType","url","extension","toLowerCase","WOFF","dataAsUrl","content","isDataUrl","search","canvasToBlob","canvas","toBlob","Promise","resolve","binaryString","atob","toDataURL","split","binaryArray","Uint8Array","charCodeAt","Blob","resolveUrl","baseUrl","doc","implementation","createHTMLDocument","base","createElement","head","appendChild","body","getAndEncode","impl","options","cacheBust","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","readyState","status","fail","encoder","FileReader","onloadend","result","readAsDataURL","response","ontimeout","responseType","timeout","send","imagePlaceholder","message","console","error","uid","Math","random","pow","toString","slice","delay","ms","arg","setTimeout","asArray","arrayLike","array","push","escapeXhtml","makeImage","uri","reject","image","onload","onerror","node","leftBorder","px","rightBorder","scrollWidth","topBorder","bottomBorder","scrollHeight","match","exec","styleProperty","value","getComputedStyle","getPropertyValue","parseFloat","newUtil","inliner","URL_REGEX","inlineAll","get","shouldProcess","nothingToInline","then","readUrls","urls","done","forEach","inline","filter","RegExp","urlAsRegex","newInliner","fontFaces","resolveAll","readAll","webFonts","all","webFont","cssStrings","join","styleSheets","cssRules","sheet","bind","e","log","rule","CSSRule","FONT_FACE_RULE","style","rules","newWebFont","webFontRule","parentStyleSheet","cssText","newFontFaces","images","Element","background","inlined","setProperty","getPropertyPriority","inlineBackground","HTMLImageElement","newImage","childNodes","child","newImages","defaultOptions","undefined","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","cloneNode","root","HTMLCanvasElement","clone","cloneChildren","original","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","source","name","copyProperties","styleElement","selector","formatCssText","formatCssProperties","createTextNode","formatPseudoElementStyle","clonePseudoElement","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","processClone","cloneChildrenInOrder","parent","childClone","embedFonts","inlineImages","bgcolor","backgroundColor","Object","keys","property","XMLSerializer","serializeToString","xhtml","foreignObject","svg","makeSvgDataUri","domNode","ctx","fillStyle","fillRect","newCanvas","drawImage","styleNode","module","exports"],"mappings":"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","file":"93b5708f037e482e1c7b15863b66db5b446f04a0-b8d7c58deecc9b4a4360.js","sourcesContent":["import {\n  ChartDrawData,\n  IChartDrawLabelData,\n  IChartDrawGridData,\n} from \"chartist\";\n\nexport const isLabel = (data: ChartDrawData): data is IChartDrawLabelData =>\n  data.type === \"label\";\n\nexport const isXLabel = (data: IChartDrawLabelData): boolean =>\n  data.axis?.units.pos === \"x\";\n\nexport const isGrid = (data: ChartDrawData): data is IChartDrawGridData =>\n  data.type === \"grid\";\n\nexport const isXGrid = (data: IChartDrawGridData): boolean =>\n  data.axis?.units.pos === \"x\";\nexport const isYGrid = (data: IChartDrawGridData): boolean =>\n  data.axis?.units.pos === \"y\";\n\nexport const centerXLabel = (\n  data: ChartDrawData,\n  areLabalesRotated?: boolean\n): void => {\n  if (!isLabel(data) || !isXLabel(data)) {\n    return;\n  }\n  data.element.attr({\n    width: 35,\n  });\n  if (data.index === 0) {\n    return;\n  }\n  const x = data.x || 0;\n\n  const digitsCount = data.element._node.textContent?.length || 1;\n\n  if (data.index === data.axis.ticks.length - 1) {\n    let lastLabelX = x - digitsCount * 6;\n    if (areLabalesRotated) {\n      lastLabelX = lastLabelX - 3;\n    }\n    // last label should be right aligned\n    data.element.attr({\n      x: lastLabelX,\n    });\n    return;\n  }\n\n  data.element.attr({\n    x: x - digitsCount * 3.5,\n  });\n};\n\n/** Function to show vertical grid under the canvas */\nexport const styleVerticalGrid = (\n  data: ChartDrawData,\n  tickHeight: number,\n  isFirstOneFull?: boolean\n): void => {\n  if (!isGrid(data) || !isXGrid(data)) {\n    return;\n  }\n  if (data.index === 0 && isFirstOneFull) {\n    data.element.attr({\n      y1: data.y1,\n      y2: data.y2 + tickHeight - 5,\n    });\n    return;\n  }\n  data.element.attr({\n    y1: data.y2,\n    y2: data.y2 + tickHeight - 5,\n  });\n};\n\n/** Function to remove all horizontal lines, except for the last one */\nexport const removeHorizontalGridExceptLast = (data: ChartDrawData): void => {\n  if (!isGrid(data) || !isYGrid(data)) {\n    return;\n  }\n  if (data.index !== 0) {\n    data.element.remove();\n  }\n};\n","import React, { PureComponent } from \"react\";\nimport classes from \"./ChartWrapper.module.css\";\nimport cn from \"clsx\";\nimport Typography from \"src/components/ui-kit/Typography\";\nimport EmbedModal from \"src/components/EmbedModal\";\nimport DownloadButton from \"src/components/DownloadButton\";\nimport { OutboundLink } from \"gatsby-plugin-google-gtag\";\n\nimport \"chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css\";\nimport \"chartist/dist/chartist.min.css\";\n\nexport type LabelOverrideValue =\n  | \"a\"\n  | \"b\"\n  | \"c\"\n  | \"d\"\n  | \"e\"\n  | \"f\"\n  | \"h\"\n  | \"i\"\n  | \"j\"\n  | \"k\"\n  | \"l\";\n\ninterface ChartWrapperProps {\n  labels?: string[];\n  title: string;\n  downloadFilename: string;\n  isIframeMode?: boolean;\n  onDownloadButtonClick: () => void;\n  downloadAreaRef: React.Ref<HTMLDivElement>;\n  iframePath: string;\n  isSeparateLabels?: boolean;\n  centerTitle?: boolean;\n  labelOverrides?: LabelOverrideValue[];\n  isFullWidth?: boolean;\n}\n\nclass ChartWrapper extends PureComponent<\n  React.PropsWithChildren<ChartWrapperProps>\n> {\n  public static defaultProps = {\n    isIframeMode: false,\n  };\n\n  render(): React.ReactNode {\n    const {\n      children,\n      labels,\n      title,\n      isIframeMode,\n      onDownloadButtonClick,\n      downloadAreaRef,\n      iframePath,\n      isSeparateLabels = false,\n      centerTitle = false,\n      labelOverrides,\n      isFullWidth = false,\n    } = this.props;\n\n    return (\n      <div\n        className={cn(classes.chart, {\n          [classes.isFullWidth]: isFullWidth,\n        })}\n      >\n        <div className={cn(classes.twoColumns)}>\n          <div className={cn(classes.leftColumn)} ref={downloadAreaRef}>\n            <Typography\n              font=\"sans-serif\"\n              className={cn(classes.title, {\n                [classes.center]: centerTitle,\n              })}\n              variant=\"h3\"\n              isUpperCased\n            >\n              <b>{title}</b>\n            </Typography>\n            <div\n              className={cn(classes.legend, {\n                [classes.flexWrap]: isSeparateLabels,\n              })}\n            >\n              {labels?.map((l, i) => (\n                <div key={i} className={cn(classes.legendItem)}>\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    className={`ct-series-${\n                      labelOverrides\n                        ? labelOverrides[i]\n                        : String.fromCharCode(97 + i)\n                    }`}\n                  >\n                    <rect\n                      width=\"16\"\n                      height=\"16\"\n                      className={cn(classes.legendIcon)}\n                    ></rect>\n                  </svg>\n                  <Typography\n                    variant=\"span\"\n                    className={cn(classes.legendTitle)}\n                  >\n                    <b>{l}</b>\n                  </Typography>\n                </div>\n              ))}\n            </div>\n            <div className={cn(classes.chartsContainer)}>{children}</div>\n            <div className={cn(classes.footer)}>\n              <hr className={cn(classes.border)} />\n              <Typography color=\"muted\">\n                <small>\n                  <OutboundLink\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href=\"http://cdep.ru/index.php?id=79\"\n                  >\n                    Источник: Судебный департамент\n                  </OutboundLink>\n                </small>\n              </Typography>\n            </div>\n          </div>\n          {!isIframeMode ? (\n            <div className={cn(classes.actions)}>\n              <EmbedModal title={title} type=\"chart\" iframePath={iframePath} />\n              <DownloadButton\n                title={title}\n                type=\"chart\"\n                onClick={onDownloadButtonClick}\n              />\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChartWrapper;\n","import React, { PureComponent } from \"react\";\nimport ChartWrapper from \"./ChartWrapper\";\nimport domtoimage from \"dom-to-image\";\nimport { saveAs } from \"file-saver\";\n\ninterface ChartWrapperContainerProps\n  extends Omit<\n    React.ComponentProps<typeof ChartWrapper>,\n    \"onDownloadButtonClick\" | \"downloadAreaRef\"\n  > {\n  isImageGenerationDebug?: boolean;\n}\n\nclass ChartWrapperContainer extends PureComponent<ChartWrapperContainerProps> {\n  public static defaultProps = {\n    isImageGenerationDebug: false,\n  };\n\n  private downloadAreaRef = React.createRef<HTMLDivElement>();\n\n  render(): React.ReactNode {\n    return (\n      <ChartWrapper\n        {...this.props}\n        onDownloadButtonClick={this.handleDownloadButtonClick}\n        downloadAreaRef={this.downloadAreaRef}\n      ></ChartWrapper>\n    );\n  }\n\n  private handleDownloadButtonClick = async () => {\n    if (!this.downloadAreaRef.current) {\n      return;\n    }\n\n    if (this.props.isImageGenerationDebug) {\n      const dataUrl = await domtoimage.toSvg(this.downloadAreaRef.current);\n      const img = new Image();\n      img.src = dataUrl;\n      const w = window.open(\"\");\n      w?.document.write(img.outerHTML);\n      return;\n    }\n\n    const dataUrl = await domtoimage.toPng(this.downloadAreaRef.current);\n    saveAs(dataUrl, this.props.downloadFilename);\n  };\n}\n\nexport default ChartWrapperContainer;\n","import ChartWrapperContainer from \"./ChartWrapper.container\";\nexport default ChartWrapperContainer;\nexport type { LabelOverrideValue } from \"./ChartWrapper\";\n","(function (global) {\n  'use strict';\n\n  var util = newUtil();\n  var inliner = newInliner();\n  var fontFaces = newFontFaces();\n  var images = newImages(); // Default impl options\n\n  var defaultOptions = {\n    // Default is to fail on error, no placeholder\n    imagePlaceholder: undefined,\n    // Default cache bust is false, it will use the cache\n    cacheBust: false\n  };\n  var domtoimage = {\n    toSvg: toSvg,\n    toPng: toPng,\n    toJpeg: toJpeg,\n    toBlob: toBlob,\n    toPixelData: toPixelData,\n    impl: {\n      fontFaces: fontFaces,\n      images: images,\n      util: util,\n      inliner: inliner,\n      options: {}\n    }\n  };\n  if (typeof module !== 'undefined') module.exports = domtoimage;else global.domtoimage = domtoimage;\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options\n   * @param {Function} options.filter - Should return true if passed node should be included in the output\n   *          (excluding node means excluding it's children as well). Not called on the root node.\n   * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n   * @param {Number} options.width - width to be applied to node before rendering.\n   * @param {Number} options.height - height to be applied to node before rendering.\n   * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n   * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n              defaults to 1.0.\n   * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n   * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n   * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n   * */\n\n  function toSvg(node, options) {\n    options = options || {};\n    copyOptions(options);\n    return Promise.resolve(node).then(function (node) {\n      return cloneNode(node, options.filter, true);\n    }).then(embedFonts).then(inlineImages).then(applyOptions).then(function (clone) {\n      return makeSvgDataUri(clone, options.width || util.width(node), options.height || util.height(node));\n    });\n\n    function applyOptions(clone) {\n      if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n      if (options.width) clone.style.width = options.width + 'px';\n      if (options.height) clone.style.height = options.height + 'px';\n      if (options.style) Object.keys(options.style).forEach(function (property) {\n        clone.style[property] = options.style[property];\n      });\n      return clone;\n    }\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n   * */\n\n\n  function toPixelData(node, options) {\n    return draw(node, options || {}).then(function (canvas) {\n      return canvas.getContext('2d').getImageData(0, 0, util.width(node), util.height(node)).data;\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n   * */\n\n\n  function toPng(node, options) {\n    return draw(node, options || {}).then(function (canvas) {\n      return canvas.toDataURL();\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n   * */\n\n\n  function toJpeg(node, options) {\n    options = options || {};\n    return draw(node, options).then(function (canvas) {\n      return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a PNG image blob\n   * */\n\n\n  function toBlob(node, options) {\n    return draw(node, options || {}).then(util.canvasToBlob);\n  }\n\n  function copyOptions(options) {\n    // Copy options to impl options for use in impl\n    if (typeof options.imagePlaceholder === 'undefined') {\n      domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n    } else {\n      domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n    }\n\n    if (typeof options.cacheBust === 'undefined') {\n      domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n    } else {\n      domtoimage.impl.options.cacheBust = options.cacheBust;\n    }\n  }\n\n  function draw(domNode, options) {\n    return toSvg(domNode, options).then(util.makeImage).then(util.delay(100)).then(function (image) {\n      var canvas = newCanvas(domNode);\n      canvas.getContext('2d').drawImage(image, 0, 0);\n      return canvas;\n    });\n\n    function newCanvas(domNode) {\n      var canvas = document.createElement('canvas');\n      canvas.width = options.width || util.width(domNode);\n      canvas.height = options.height || util.height(domNode);\n\n      if (options.bgcolor) {\n        var ctx = canvas.getContext('2d');\n        ctx.fillStyle = options.bgcolor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n\n      return canvas;\n    }\n  }\n\n  function cloneNode(node, filter, root) {\n    if (!root && filter && !filter(node)) return Promise.resolve();\n    return Promise.resolve(node).then(makeNodeCopy).then(function (clone) {\n      return cloneChildren(node, clone, filter);\n    }).then(function (clone) {\n      return processClone(node, clone);\n    });\n\n    function makeNodeCopy(node) {\n      if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n      return node.cloneNode(false);\n    }\n\n    function cloneChildren(original, clone, filter) {\n      var children = original.childNodes;\n      if (children.length === 0) return Promise.resolve(clone);\n      return cloneChildrenInOrder(clone, util.asArray(children), filter).then(function () {\n        return clone;\n      });\n\n      function cloneChildrenInOrder(parent, children, filter) {\n        var done = Promise.resolve();\n        children.forEach(function (child) {\n          done = done.then(function () {\n            return cloneNode(child, filter);\n          }).then(function (childClone) {\n            if (childClone) parent.appendChild(childClone);\n          });\n        });\n        return done;\n      }\n    }\n\n    function processClone(original, clone) {\n      if (!(clone instanceof Element)) return clone;\n      return Promise.resolve().then(cloneStyle).then(clonePseudoElements).then(copyUserInput).then(fixSvg).then(function () {\n        return clone;\n      });\n\n      function cloneStyle() {\n        copyStyle(window.getComputedStyle(original), clone.style);\n\n        function copyStyle(source, target) {\n          if (source.cssText) target.cssText = source.cssText;else copyProperties(source, target);\n\n          function copyProperties(source, target) {\n            util.asArray(source).forEach(function (name) {\n              target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n            });\n          }\n        }\n      }\n\n      function clonePseudoElements() {\n        [':before', ':after'].forEach(function (element) {\n          clonePseudoElement(element);\n        });\n\n        function clonePseudoElement(element) {\n          var style = window.getComputedStyle(original, element);\n          var content = style.getPropertyValue('content');\n          if (content === '' || content === 'none') return;\n          var className = util.uid();\n          clone.className = clone.className + ' ' + className;\n          var styleElement = document.createElement('style');\n          styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n          clone.appendChild(styleElement);\n\n          function formatPseudoElementStyle(className, element, style) {\n            var selector = '.' + className + ':' + element;\n            var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n            return document.createTextNode(selector + '{' + cssText + '}');\n\n            function formatCssText(style) {\n              var content = style.getPropertyValue('content');\n              return style.cssText + ' content: ' + content + ';';\n            }\n\n            function formatCssProperties(style) {\n              return util.asArray(style).map(formatProperty).join('; ') + ';';\n\n              function formatProperty(name) {\n                return name + ': ' + style.getPropertyValue(name) + (style.getPropertyPriority(name) ? ' !important' : '');\n              }\n            }\n          }\n        }\n      }\n\n      function copyUserInput() {\n        if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n        if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n      }\n\n      function fixSvg() {\n        if (!(clone instanceof SVGElement)) return;\n        clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        if (!(clone instanceof SVGRectElement)) return;\n        ['width', 'height'].forEach(function (attribute) {\n          var value = clone.getAttribute(attribute);\n          if (!value) return;\n          clone.style.setProperty(attribute, value);\n        });\n      }\n    }\n  }\n\n  function embedFonts(node) {\n    return fontFaces.resolveAll().then(function (cssText) {\n      var styleNode = document.createElement('style');\n      node.appendChild(styleNode);\n      styleNode.appendChild(document.createTextNode(cssText));\n      return node;\n    });\n  }\n\n  function inlineImages(node) {\n    return images.inlineAll(node).then(function () {\n      return node;\n    });\n  }\n\n  function makeSvgDataUri(node, width, height) {\n    return Promise.resolve(node).then(function (node) {\n      node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n      return new XMLSerializer().serializeToString(node);\n    }).then(util.escapeXhtml).then(function (xhtml) {\n      return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n    }).then(function (foreignObject) {\n      return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' + foreignObject + '</svg>';\n    }).then(function (svg) {\n      return 'data:image/svg+xml;charset=utf-8,' + svg;\n    });\n  }\n\n  function newUtil() {\n    return {\n      escape: escape,\n      parseExtension: parseExtension,\n      mimeType: mimeType,\n      dataAsUrl: dataAsUrl,\n      isDataUrl: isDataUrl,\n      canvasToBlob: canvasToBlob,\n      resolveUrl: resolveUrl,\n      getAndEncode: getAndEncode,\n      uid: uid(),\n      delay: delay,\n      asArray: asArray,\n      escapeXhtml: escapeXhtml,\n      makeImage: makeImage,\n      width: width,\n      height: height\n    };\n\n    function mimes() {\n      /*\n       * Only WOFF and EOT mime types for fonts are 'real'\n       * see http://www.iana.org/assignments/media-types/media-types.xhtml\n       */\n      var WOFF = 'application/font-woff';\n      var JPEG = 'image/jpeg';\n      return {\n        'woff': WOFF,\n        'woff2': WOFF,\n        'ttf': 'application/font-truetype',\n        'eot': 'application/vnd.ms-fontobject',\n        'png': 'image/png',\n        'jpg': JPEG,\n        'jpeg': JPEG,\n        'gif': 'image/gif',\n        'tiff': 'image/tiff',\n        'svg': 'image/svg+xml'\n      };\n    }\n\n    function parseExtension(url) {\n      var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n      if (match) return match[1];else return '';\n    }\n\n    function mimeType(url) {\n      var extension = parseExtension(url).toLowerCase();\n      return mimes()[extension] || '';\n    }\n\n    function isDataUrl(url) {\n      return url.search(/^(data:)/) !== -1;\n    }\n\n    function toBlob(canvas) {\n      return new Promise(function (resolve) {\n        var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n        var length = binaryString.length;\n        var binaryArray = new Uint8Array(length);\n\n        for (var i = 0; i < length; i++) {\n          binaryArray[i] = binaryString.charCodeAt(i);\n        }\n\n        resolve(new Blob([binaryArray], {\n          type: 'image/png'\n        }));\n      });\n    }\n\n    function canvasToBlob(canvas) {\n      if (canvas.toBlob) return new Promise(function (resolve) {\n        canvas.toBlob(resolve);\n      });\n      return toBlob(canvas);\n    }\n\n    function resolveUrl(url, baseUrl) {\n      var doc = document.implementation.createHTMLDocument();\n      var base = doc.createElement('base');\n      doc.head.appendChild(base);\n      var a = doc.createElement('a');\n      doc.body.appendChild(a);\n      base.href = baseUrl;\n      a.href = url;\n      return a.href;\n    }\n\n    function uid() {\n      var index = 0;\n      return function () {\n        return 'u' + fourRandomChars() + index++;\n\n        function fourRandomChars() {\n          /* see http://stackoverflow.com/a/6248722/2519373 */\n          return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n        }\n      };\n    }\n\n    function makeImage(uri) {\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n\n        image.onload = function () {\n          resolve(image);\n        };\n\n        image.onerror = reject;\n        image.src = uri;\n      });\n    }\n\n    function getAndEncode(url) {\n      var TIMEOUT = 30000;\n\n      if (domtoimage.impl.options.cacheBust) {\n        // Cache bypass so we dont have CORS issues with cached images\n        // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n        url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime();\n      }\n\n      return new Promise(function (resolve) {\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = done;\n        request.ontimeout = timeout;\n        request.responseType = 'blob';\n        request.timeout = TIMEOUT;\n        request.open('GET', url, true);\n        request.send();\n        var placeholder;\n\n        if (domtoimage.impl.options.imagePlaceholder) {\n          var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n\n          if (split && split[1]) {\n            placeholder = split[1];\n          }\n        }\n\n        function done() {\n          if (request.readyState !== 4) return;\n\n          if (request.status !== 200) {\n            if (placeholder) {\n              resolve(placeholder);\n            } else {\n              fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n            }\n\n            return;\n          }\n\n          var encoder = new FileReader();\n\n          encoder.onloadend = function () {\n            var content = encoder.result.split(/,/)[1];\n            resolve(content);\n          };\n\n          encoder.readAsDataURL(request.response);\n        }\n\n        function timeout() {\n          if (placeholder) {\n            resolve(placeholder);\n          } else {\n            fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n          }\n        }\n\n        function fail(message) {\n          console.error(message);\n          resolve('');\n        }\n      });\n    }\n\n    function dataAsUrl(content, type) {\n      return 'data:' + type + ';base64,' + content;\n    }\n\n    function escape(string) {\n      return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    }\n\n    function delay(ms) {\n      return function (arg) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve(arg);\n          }, ms);\n        });\n      };\n    }\n\n    function asArray(arrayLike) {\n      var array = [];\n      var length = arrayLike.length;\n\n      for (var i = 0; i < length; i++) {\n        array.push(arrayLike[i]);\n      }\n\n      return array;\n    }\n\n    function escapeXhtml(string) {\n      return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n    }\n\n    function width(node) {\n      var leftBorder = px(node, 'border-left-width');\n      var rightBorder = px(node, 'border-right-width');\n      return node.scrollWidth + leftBorder + rightBorder;\n    }\n\n    function height(node) {\n      var topBorder = px(node, 'border-top-width');\n      var bottomBorder = px(node, 'border-bottom-width');\n      return node.scrollHeight + topBorder + bottomBorder;\n    }\n\n    function px(node, styleProperty) {\n      var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n      return parseFloat(value.replace('px', ''));\n    }\n  }\n\n  function newInliner() {\n    var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n    return {\n      inlineAll: inlineAll,\n      shouldProcess: shouldProcess,\n      impl: {\n        readUrls: readUrls,\n        inline: inline\n      }\n    };\n\n    function shouldProcess(string) {\n      return string.search(URL_REGEX) !== -1;\n    }\n\n    function readUrls(string) {\n      var result = [];\n      var match;\n\n      while ((match = URL_REGEX.exec(string)) !== null) {\n        result.push(match[1]);\n      }\n\n      return result.filter(function (url) {\n        return !util.isDataUrl(url);\n      });\n    }\n\n    function inline(string, url, baseUrl, get) {\n      return Promise.resolve(url).then(function (url) {\n        return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n      }).then(get || util.getAndEncode).then(function (data) {\n        return util.dataAsUrl(data, util.mimeType(url));\n      }).then(function (dataUrl) {\n        return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n      });\n\n      function urlAsRegex(url) {\n        return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n      }\n    }\n\n    function inlineAll(string, baseUrl, get) {\n      if (nothingToInline()) return Promise.resolve(string);\n      return Promise.resolve(string).then(readUrls).then(function (urls) {\n        var done = Promise.resolve(string);\n        urls.forEach(function (url) {\n          done = done.then(function (string) {\n            return inline(string, url, baseUrl, get);\n          });\n        });\n        return done;\n      });\n\n      function nothingToInline() {\n        return !shouldProcess(string);\n      }\n    }\n  }\n\n  function newFontFaces() {\n    return {\n      resolveAll: resolveAll,\n      impl: {\n        readAll: readAll\n      }\n    };\n\n    function resolveAll() {\n      return readAll(document).then(function (webFonts) {\n        return Promise.all(webFonts.map(function (webFont) {\n          return webFont.resolve();\n        }));\n      }).then(function (cssStrings) {\n        return cssStrings.join('\\n');\n      });\n    }\n\n    function readAll() {\n      return Promise.resolve(util.asArray(document.styleSheets)).then(getCssRules).then(selectWebFontRules).then(function (rules) {\n        return rules.map(newWebFont);\n      });\n\n      function selectWebFontRules(cssRules) {\n        return cssRules.filter(function (rule) {\n          return rule.type === CSSRule.FONT_FACE_RULE;\n        }).filter(function (rule) {\n          return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n        });\n      }\n\n      function getCssRules(styleSheets) {\n        var cssRules = [];\n        styleSheets.forEach(function (sheet) {\n          try {\n            util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n          } catch (e) {\n            console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n          }\n        });\n        return cssRules;\n      }\n\n      function newWebFont(webFontRule) {\n        return {\n          resolve: function resolve() {\n            var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n            return inliner.inlineAll(webFontRule.cssText, baseUrl);\n          },\n          src: function src() {\n            return webFontRule.style.getPropertyValue('src');\n          }\n        };\n      }\n    }\n  }\n\n  function newImages() {\n    return {\n      inlineAll: inlineAll,\n      impl: {\n        newImage: newImage\n      }\n    };\n\n    function newImage(element) {\n      return {\n        inline: inline\n      };\n\n      function inline(get) {\n        if (util.isDataUrl(element.src)) return Promise.resolve();\n        return Promise.resolve(element.src).then(get || util.getAndEncode).then(function (data) {\n          return util.dataAsUrl(data, util.mimeType(element.src));\n        }).then(function (dataUrl) {\n          return new Promise(function (resolve, reject) {\n            element.onload = resolve;\n            element.onerror = reject;\n            element.src = dataUrl;\n          });\n        });\n      }\n    }\n\n    function inlineAll(node) {\n      if (!(node instanceof Element)) return Promise.resolve(node);\n      return inlineBackground(node).then(function () {\n        if (node instanceof HTMLImageElement) return newImage(node).inline();else return Promise.all(util.asArray(node.childNodes).map(function (child) {\n          return inlineAll(child);\n        }));\n      });\n\n      function inlineBackground(node) {\n        var background = node.style.getPropertyValue('background');\n        if (!background) return Promise.resolve(node);\n        return inliner.inlineAll(background).then(function (inlined) {\n          node.style.setProperty('background', inlined, node.style.getPropertyPriority('background'));\n        }).then(function () {\n          return node;\n        });\n      }\n    }\n  }\n})(this);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"ChartWrapper-module--chart--7QQlG\",\"chartsContainer\":\"ChartWrapper-module--charts-container--17Cp0\",\"legend\":\"ChartWrapper-module--legend--bCx34\",\"flexWrap\":\"ChartWrapper-module--flex-wrap--1FtVd\",\"legendIcon\":\"ChartWrapper-module--legend-icon--kmFI1\",\"legendItem\":\"ChartWrapper-module--legend-item--3e_N9\",\"legendTitle\":\"ChartWrapper-module--legend-title--1JkOL\",\"title\":\"ChartWrapper-module--title--QkwxQ\",\"center\":\"ChartWrapper-module--center--3DXhR\",\"twoColumns\":\"ChartWrapper-module--two-columns--38ZRi\",\"isFullWidth\":\"ChartWrapper-module--is-full-width--Y-7bc\",\"leftColumn\":\"ChartWrapper-module--left-column--lN5OP\",\"footer\":\"ChartWrapper-module--footer--17-VO\",\"border\":\"ChartWrapper-module--border--3chDv\",\"actions\":\"ChartWrapper-module--actions--2r9pl\"};"],"sourceRoot":""}