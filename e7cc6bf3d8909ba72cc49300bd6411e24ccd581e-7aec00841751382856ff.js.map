{"version":3,"sources":["webpack:///./node_modules/iconv-lite/encodings/utf32.js","webpack:///./node_modules/iconv-lite/encodings/internal.js","webpack:///./node_modules/isarray/index.js","webpack:///./src/utils/csv.ts","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-data.js","webpack:///./node_modules/iconv-lite/lib/streams.js","webpack:///./src/components/Table/components/TableRow/assets/plus.svg","webpack:///./node_modules/iconv-lite/encodings/sbcs-data.js","webpack:///./src/components/Table/Table.module.css","webpack:///./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/iconv-lite/encodings/index.js","webpack:///./node_modules/iconv-lite/encodings/utf16.js","webpack:///./src/components/Table/components/TableRow/TableRow.tsx","webpack:///./src/components/Table/components/TableRow/index.ts","webpack:///./src/components/Table/components/TableRow/TableRow.container.tsx","webpack:///./src/components/Table/Table.tsx","webpack:///./src/components/Table/Table.container.tsx","webpack:///./src/components/Table/index.ts","webpack:///./node_modules/iconv-lite/lib/index.js","webpack:///./src/components/Table/components/TableRow/TableRow.module.css","webpack:///./src/components/Table/components/TableRow/assets/minus.svg","webpack:///./node_modules/iconv-lite/lib/bom-handling.js","webpack:///./node_modules/safer-buffer/safer.js","webpack:///./node_modules/iconv-lite/encodings/utf7.js"],"names":["Buffer","Utf32Codec","codecOptions","iconv","this","bomAware","isLE","Utf32Encoder","options","codec","highSurrogate","Utf32Decoder","badChar","defaultCharUnicode","charCodeAt","overflow","_writeCodepoint","dst","offset","codepoint","high","Utf32AutoCodec","Utf32AutoEncoder","undefined","addBOM","encoder","getEncoder","defaultEncoding","Utf32AutoDecoder","decoder","initialBufs","initialBufsLen","detectEncoding","bufs","b","charsProcessed","invalidLE","invalidBE","bmpCharsLE","bmpCharsBE","outer_loop","i","length","buf","j","push","exports","_utf32","utf32le","type","utf32be","ucs4le","ucs4be","prototype","write","str","src","from","alloc","write32","writeUInt32LE","writeUInt32BE","code","readUInt16LE","isHighSurrogate","isLowSurrogate","call","slice","end","toString","utf32","ucs4","encoding","getDecoder","resStr","trail","InternalCodec","enc","encodingName","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","module","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","isBuffer","completeQuads","bufIdx","charCode","res","curByte","String","fromCharCode","Array","isArray","arr","getCsvRow","row","join","getCsv","tables","activeTableIndex","table","result","titleRow","columns","filter","c","isHidden","map","title","rows","values","v","value","Blob","Uint8Array","encode","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","len","revLookup","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","Error","indexOf","start","num","output","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","fromArrayLike","fromArrayBuffer","string","isEncoding","actual","fromString","obj","checked","copy","buffer","val","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","Math","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","apply","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","Infinity","leadSurrogate","trim","replace","stringtrim","base64clean","encodeAdd","encodeSkipVals","to","gb18030","stream_module","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","create","constructor","_transform","chunk","done","_flush","collect","cb","chunks","on","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","defaultCharSingleByte","SBCSEncoder","SBCSDecoder","_sbcs","idx1","idx2","nb","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","p","r","self","utf8CheckExtraBytes","total","utf8CheckIncomplete","copyProps","key","SafeBuffer","_dbcs","DBCSCodec","UNASSIGNED_NODE","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","commonThirdByteNodeIdx","commonFourthByteNodeIdx","firstByteNode","secondByteNode","thirdByteNode","k","fourthByteNode","l","encodeTable","encodeTableSeq","skipEncodeChars","_fillEncodeTable","uChar","hasOwnProperty","_setEncodeChar","defCharSB","DBCSEncoder","seqObj","DBCSDecoder","nodeIdx","prevBytes","findIdx","mid","_getDecodeTrieNode","addr","node","curAddr","writeTable","part","codeTrail","seq","_getEncodeBucket","uCode","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","hasValues","subNodeEmpty","mbCode","subNodeIdx","newPrefix","nextChar","resCode","subtable","idx","uChars","gbChars","prevOffset","seqStart","ptr","uCodeLead","bytesArr","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","log","LN2","modules","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","Utf16Decoder","asciiCharsLE","asciiCharsBE","utf16be","buf2","utf16","TableRow","getAccrodionButton","props","isOpened","t","isAccordion","tabIndex","className","cn","classes","collapseIconButton","require","alt","render","columnsCount","onClick","rowAccordion","isRegular","isClosed","colSpan","Typography","isUpperCased","isCapitalized","component","PureComponent","withLocale","useState","setOpened","Table","iframePath","onDownloadButtonClick","onTableTitleClick","isNotPaddedLeft","isNotMarginTop","isEqualWidth","isColored","hideEmbed","isScrollable","container","titleContainer","variant","buttonsContainer","EmbedModal","DownloadButton","Menu","isActive","tableContainer","Boolean","TableContainer","state","handleDownloadButtonClick","csvContent","saveAs","downloadFilename","hanldeTableTitleClick","index","setState","bomHandling","encodings","decode","skipDecodeWarning","console","error","encodingExists","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecDef","PrependBOM","stripBOM","StripBOM","enableStreamingAPI","supportsStreams","streams","encodeStream","decodeStream","PrependBOMWrapper","StripBOMWrapper","pass","safer","Safer","kStringMaxLength","process","binding","constants","MAX_LENGTH","MAX_STRING_LENGTH","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","bind","base64Regex","base64Chars","test","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","base64IMAPChars"],"mappings":"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","file":"e7cc6bf3d8909ba72cc49300bd6411e24ccd581e-7aec00841751382856ff.js","sourcesContent":["'use strict';\n\nvar Buffer = require('safer-buffer').Buffer; // == UTF32-LE/BE codec. ==========================================================\n\n\nexports._utf32 = Utf32Codec;\n\nfunction Utf32Codec(codecOptions, iconv) {\n  this.iconv = iconv;\n  this.bomAware = true;\n  this.isLE = codecOptions.isLE;\n}\n\nexports.utf32le = {\n  type: '_utf32',\n  isLE: true\n};\nexports.utf32be = {\n  type: '_utf32',\n  isLE: false\n}; // Aliases\n\nexports.ucs4le = 'utf32le';\nexports.ucs4be = 'utf32be';\nUtf32Codec.prototype.encoder = Utf32Encoder;\nUtf32Codec.prototype.decoder = Utf32Decoder; // -- Encoding\n\nfunction Utf32Encoder(options, codec) {\n  this.isLE = codec.isLE;\n  this.highSurrogate = 0;\n}\n\nUtf32Encoder.prototype.write = function (str) {\n  var src = Buffer.from(str, 'ucs2');\n  var dst = Buffer.alloc(src.length * 2);\n  var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;\n  var offset = 0;\n\n  for (var i = 0; i < src.length; i += 2) {\n    var code = src.readUInt16LE(i);\n    var isHighSurrogate = 0xD800 <= code && code < 0xDC00;\n    var isLowSurrogate = 0xDC00 <= code && code < 0xE000;\n\n    if (this.highSurrogate) {\n      if (isHighSurrogate || !isLowSurrogate) {\n        // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low\n        // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character\n        // (technically wrong, but expected by some applications, like Windows file names).\n        write32.call(dst, this.highSurrogate, offset);\n        offset += 4;\n      } else {\n        // Create 32-bit value from high and low surrogates;\n        var codepoint = (this.highSurrogate - 0xD800 << 10 | code - 0xDC00) + 0x10000;\n        write32.call(dst, codepoint, offset);\n        offset += 4;\n        this.highSurrogate = 0;\n        continue;\n      }\n    }\n\n    if (isHighSurrogate) this.highSurrogate = code;else {\n      // Even if the current character is a low surrogate, with no previous high surrogate, we'll\n      // encode it as a semi-invalid stand-alone character for the same reasons expressed above for\n      // unpaired high surrogates.\n      write32.call(dst, code, offset);\n      offset += 4;\n      this.highSurrogate = 0;\n    }\n  }\n\n  if (offset < dst.length) dst = dst.slice(0, offset);\n  return dst;\n};\n\nUtf32Encoder.prototype.end = function () {\n  // Treat any leftover high surrogate as a semi-valid independent character.\n  if (!this.highSurrogate) return;\n  var buf = Buffer.alloc(4);\n  if (this.isLE) buf.writeUInt32LE(this.highSurrogate, 0);else buf.writeUInt32BE(this.highSurrogate, 0);\n  this.highSurrogate = 0;\n  return buf;\n}; // -- Decoding\n\n\nfunction Utf32Decoder(options, codec) {\n  this.isLE = codec.isLE;\n  this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);\n  this.overflow = [];\n}\n\nUtf32Decoder.prototype.write = function (src) {\n  if (src.length === 0) return '';\n  var i = 0;\n  var codepoint = 0;\n  var dst = Buffer.alloc(src.length + 4);\n  var offset = 0;\n  var isLE = this.isLE;\n  var overflow = this.overflow;\n  var badChar = this.badChar;\n\n  if (overflow.length > 0) {\n    for (; i < src.length && overflow.length < 4; i++) {\n      overflow.push(src[i]);\n    }\n\n    if (overflow.length === 4) {\n      // NOTE: codepoint is a signed int32 and can be negative.\n      // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).\n      if (isLE) {\n        codepoint = overflow[i] | overflow[i + 1] << 8 | overflow[i + 2] << 16 | overflow[i + 3] << 24;\n      } else {\n        codepoint = overflow[i + 3] | overflow[i + 2] << 8 | overflow[i + 1] << 16 | overflow[i] << 24;\n      }\n\n      overflow.length = 0;\n      offset = _writeCodepoint(dst, offset, codepoint, badChar);\n    }\n  } // Main loop. Should be as optimized as possible.\n\n\n  for (; i < src.length - 3; i += 4) {\n    // NOTE: codepoint is a signed int32 and can be negative.\n    if (isLE) {\n      codepoint = src[i] | src[i + 1] << 8 | src[i + 2] << 16 | src[i + 3] << 24;\n    } else {\n      codepoint = src[i + 3] | src[i + 2] << 8 | src[i + 1] << 16 | src[i] << 24;\n    }\n\n    offset = _writeCodepoint(dst, offset, codepoint, badChar);\n  } // Keep overflowing bytes.\n\n\n  for (; i < src.length; i++) {\n    overflow.push(src[i]);\n  }\n\n  return dst.slice(0, offset).toString('ucs2');\n};\n\nfunction _writeCodepoint(dst, offset, codepoint, badChar) {\n  // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.\n  if (codepoint < 0 || codepoint > 0x10FFFF) {\n    // Not a valid Unicode codepoint\n    codepoint = badChar;\n  } // Ephemeral Planes: Write high surrogate.\n\n\n  if (codepoint >= 0x10000) {\n    codepoint -= 0x10000;\n    var high = 0xD800 | codepoint >> 10;\n    dst[offset++] = high & 0xff;\n    dst[offset++] = high >> 8; // Low surrogate is written below.\n\n    var codepoint = 0xDC00 | codepoint & 0x3FF;\n  } // Write BMP char or low surrogate.\n\n\n  dst[offset++] = codepoint & 0xff;\n  dst[offset++] = codepoint >> 8;\n  return offset;\n}\n\n;\n\nUtf32Decoder.prototype.end = function () {\n  this.overflow.length = 0;\n}; // == UTF-32 Auto codec =============================================================\n// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.\n// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32\n// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});\n// Encoder prepends BOM (which can be overridden with (addBOM: false}).\n\n\nexports.utf32 = Utf32AutoCodec;\nexports.ucs4 = 'utf32';\n\nfunction Utf32AutoCodec(options, iconv) {\n  this.iconv = iconv;\n}\n\nUtf32AutoCodec.prototype.encoder = Utf32AutoEncoder;\nUtf32AutoCodec.prototype.decoder = Utf32AutoDecoder; // -- Encoding\n\nfunction Utf32AutoEncoder(options, codec) {\n  options = options || {};\n  if (options.addBOM === undefined) options.addBOM = true;\n  this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);\n}\n\nUtf32AutoEncoder.prototype.write = function (str) {\n  return this.encoder.write(str);\n};\n\nUtf32AutoEncoder.prototype.end = function () {\n  return this.encoder.end();\n}; // -- Decoding\n\n\nfunction Utf32AutoDecoder(options, codec) {\n  this.decoder = null;\n  this.initialBufs = [];\n  this.initialBufsLen = 0;\n  this.options = options || {};\n  this.iconv = codec.iconv;\n}\n\nUtf32AutoDecoder.prototype.write = function (buf) {\n  if (!this.decoder) {\n    // Codec is not chosen yet. Accumulate initial bytes.\n    this.initialBufs.push(buf);\n    this.initialBufsLen += buf.length;\n    if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)\n      return ''; // We have enough bytes -> detect endianness.\n\n    var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n    this.decoder = this.iconv.getDecoder(encoding, this.options);\n    var resStr = '';\n\n    for (var i = 0; i < this.initialBufs.length; i++) {\n      resStr += this.decoder.write(this.initialBufs[i]);\n    }\n\n    this.initialBufs.length = this.initialBufsLen = 0;\n    return resStr;\n  }\n\n  return this.decoder.write(buf);\n};\n\nUtf32AutoDecoder.prototype.end = function () {\n  if (!this.decoder) {\n    var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n    this.decoder = this.iconv.getDecoder(encoding, this.options);\n    var resStr = '';\n\n    for (var i = 0; i < this.initialBufs.length; i++) {\n      resStr += this.decoder.write(this.initialBufs[i]);\n    }\n\n    var trail = this.decoder.end();\n    if (trail) resStr += trail;\n    this.initialBufs.length = this.initialBufsLen = 0;\n    return resStr;\n  }\n\n  return this.decoder.end();\n};\n\nfunction detectEncoding(bufs, defaultEncoding) {\n  var b = [];\n  var charsProcessed = 0;\n  var invalidLE = 0,\n      invalidBE = 0; // Number of invalid chars when decoded as LE or BE.\n\n  var bmpCharsLE = 0,\n      bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.\n\n  outer_loop: for (var i = 0; i < bufs.length; i++) {\n    var buf = bufs[i];\n\n    for (var j = 0; j < buf.length; j++) {\n      b.push(buf[j]);\n\n      if (b.length === 4) {\n        if (charsProcessed === 0) {\n          // Check BOM first.\n          if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {\n            return 'utf-32le';\n          }\n\n          if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {\n            return 'utf-32be';\n          }\n        }\n\n        if (b[0] !== 0 || b[1] > 0x10) invalidBE++;\n        if (b[3] !== 0 || b[2] > 0x10) invalidLE++;\n        if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;\n        if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;\n        b.length = 0;\n        charsProcessed++;\n\n        if (charsProcessed >= 100) {\n          break outer_loop;\n        }\n      }\n    }\n  } // Make decisions.\n\n\n  if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE) return 'utf-32be';\n  if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE) return 'utf-32le'; // Couldn't decide (likely all zeros or not enough data).\n\n  return defaultEncoding || 'utf-32le';\n}","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // Export Node.js internal encodings.\n\n\nmodule.exports = {\n  // Encodings\n  utf8: {\n    type: \"_internal\",\n    bomAware: true\n  },\n  cesu8: {\n    type: \"_internal\",\n    bomAware: true\n  },\n  unicode11utf8: \"utf8\",\n  ucs2: {\n    type: \"_internal\",\n    bomAware: true\n  },\n  utf16le: \"ucs2\",\n  binary: {\n    type: \"_internal\"\n  },\n  base64: {\n    type: \"_internal\"\n  },\n  hex: {\n    type: \"_internal\"\n  },\n  // Codec.\n  _internal: InternalCodec\n}; //------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n  this.enc = codecOptions.encodingName;\n  this.bomAware = codecOptions.bomAware;\n  if (this.enc === \"base64\") this.encoder = InternalEncoderBase64;else if (this.enc === \"cesu8\") {\n    this.enc = \"utf8\"; // Use utf8 for decoding.\n\n    this.encoder = InternalEncoderCesu8; // Add decoder for versions of Node not supporting CESU-8\n\n    if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n      this.decoder = InternalDecoderCesu8;\n      this.defaultCharUnicode = iconv.defaultCharUnicode;\n    }\n  }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder; //------------------------------------------------------------------------------\n// We use node.js internal decoder. Its signature is the same as ours.\n\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n  StringDecoder.prototype.end = function () {};\n\nfunction InternalDecoder(options, codec) {\n  this.decoder = new StringDecoder(codec.enc);\n}\n\nInternalDecoder.prototype.write = function (buf) {\n  if (!Buffer.isBuffer(buf)) {\n    buf = Buffer.from(buf);\n  }\n\n  return this.decoder.write(buf);\n};\n\nInternalDecoder.prototype.end = function () {\n  return this.decoder.end();\n}; //------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\n\nfunction InternalEncoder(options, codec) {\n  this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function (str) {\n  return Buffer.from(str, this.enc);\n};\n\nInternalEncoder.prototype.end = function () {}; //------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\n\nfunction InternalEncoderBase64(options, codec) {\n  this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function (str) {\n  str = this.prevStr + str;\n  var completeQuads = str.length - str.length % 4;\n  this.prevStr = str.slice(completeQuads);\n  str = str.slice(0, completeQuads);\n  return Buffer.from(str, \"base64\");\n};\n\nInternalEncoderBase64.prototype.end = function () {\n  return Buffer.from(this.prevStr, \"base64\");\n}; //------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\n\nfunction InternalEncoderCesu8(options, codec) {}\n\nInternalEncoderCesu8.prototype.write = function (str) {\n  var buf = Buffer.alloc(str.length * 3),\n      bufIdx = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    var charCode = str.charCodeAt(i); // Naive implementation, but it works because CESU-8 is especially easy\n    // to convert from UTF-16 (which all JS strings are encoded in).\n\n    if (charCode < 0x80) buf[bufIdx++] = charCode;else if (charCode < 0x800) {\n      buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n      buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n    } else {\n      // charCode will always be < 0x10000 in javascript.\n      buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n      buf[bufIdx++] = 0x80 + (charCode >>> 6 & 0x3f);\n      buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n    }\n  }\n\n  return buf.slice(0, bufIdx);\n};\n\nInternalEncoderCesu8.prototype.end = function () {}; //------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\n\nfunction InternalDecoderCesu8(options, codec) {\n  this.acc = 0;\n  this.contBytes = 0;\n  this.accBytes = 0;\n  this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function (buf) {\n  var acc = this.acc,\n      contBytes = this.contBytes,\n      accBytes = this.accBytes,\n      res = '';\n\n  for (var i = 0; i < buf.length; i++) {\n    var curByte = buf[i];\n\n    if ((curByte & 0xC0) !== 0x80) {\n      // Leading byte\n      if (contBytes > 0) {\n        // Previous code is invalid\n        res += this.defaultCharUnicode;\n        contBytes = 0;\n      }\n\n      if (curByte < 0x80) {\n        // Single-byte code\n        res += String.fromCharCode(curByte);\n      } else if (curByte < 0xE0) {\n        // Two-byte code\n        acc = curByte & 0x1F;\n        contBytes = 1;\n        accBytes = 1;\n      } else if (curByte < 0xF0) {\n        // Three-byte code\n        acc = curByte & 0x0F;\n        contBytes = 2;\n        accBytes = 1;\n      } else {\n        // Four or more are not supported for CESU-8.\n        res += this.defaultCharUnicode;\n      }\n    } else {\n      // Continuation byte\n      if (contBytes > 0) {\n        // We're waiting for it.\n        acc = acc << 6 | curByte & 0x3f;\n        contBytes--;\n        accBytes++;\n\n        if (contBytes === 0) {\n          // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n          if (accBytes === 2 && acc < 0x80 && acc > 0) res += this.defaultCharUnicode;else if (accBytes === 3 && acc < 0x800) res += this.defaultCharUnicode;else // Actually add character.\n            res += String.fromCharCode(acc);\n        }\n      } else {\n        // Unexpected continuation byte\n        res += this.defaultCharUnicode;\n      }\n    }\n  }\n\n  this.acc = acc;\n  this.contBytes = contBytes;\n  this.accBytes = accBytes;\n  return res;\n};\n\nInternalDecoderCesu8.prototype.end = function () {\n  var res = 0;\n  if (this.contBytes > 0) res += this.defaultCharUnicode;\n  return res;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","import iconv from \"iconv-lite\";\n\nconst getCsvRow = (row: string[]) => {\n  return row.join(\"\\t\") + \"\\n\";\n};\n\nexport interface Table {\n  columns: { isHidden?: boolean; title: string }[];\n  rows: { values: { value: string | number }[] }[];\n}\n\nexport const getCsv = (tables: Table[], activeTableIndex: number): Blob => {\n  const table = tables[activeTableIndex];\n  let result = \"\";\n  const titleRow = getCsvRow(\n    table.columns.filter((c) => !c.isHidden).map((c) => c.title)\n  );\n  if (titleRow !== \"\\n\") {\n    result += titleRow;\n  }\n  for (const row of table.rows) {\n    result += getCsvRow(row.values.map((v) => v.value?.toString() || \"\"));\n  }\n  return new Blob([\n    new Uint8Array(iconv.encode(result, \"utf16-le\", { addBOM: true })),\n  ]);\n};\n","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","\"use strict\"; // Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n  // == Japanese/ShiftJIS ====================================================\n  // All japanese encodings are based on JIS X set of standards:\n  // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n  // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n  //              Has several variations in 1978, 1983, 1990 and 1997.\n  // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n  // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n  //              2 planes, first is superset of 0208, second - revised 0212.\n  //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n  // Byte encodings are:\n  //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n  //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n  //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n  //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n  //               0x00-0x7F       - lower part of 0201\n  //               0x8E, 0xA1-0xDF - upper part of 0201\n  //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n  //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n  //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n  //               Used as-is in ISO2022 family.\n  //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n  //                0201-1976 Roman, 0208-1978, 0208-1983.\n  //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n  //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n  //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n  //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n  //\n  // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n  //\n  // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n  'shiftjis': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/shiftjis.json');\n    },\n    encodeAdd: {\n      \"\\xA5\": 0x5C,\n      \"\\u203E\": 0x7E\n    },\n    encodeSkipVals: [{\n      from: 0xED40,\n      to: 0xF940\n    }]\n  },\n  'csshiftjis': 'shiftjis',\n  'mskanji': 'shiftjis',\n  'sjis': 'shiftjis',\n  'windows31j': 'shiftjis',\n  'ms31j': 'shiftjis',\n  'xsjis': 'shiftjis',\n  'windows932': 'shiftjis',\n  'ms932': 'shiftjis',\n  '932': 'shiftjis',\n  'cp932': 'shiftjis',\n  'eucjp': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/eucjp.json');\n    },\n    encodeAdd: {\n      \"\\xA5\": 0x5C,\n      \"\\u203E\": 0x7E\n    }\n  },\n  // TODO: KDDI extension to Shift_JIS\n  // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n  // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n  // == Chinese/GBK ==========================================================\n  // http://en.wikipedia.org/wiki/GBK\n  // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n  // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n  'gb2312': 'cp936',\n  'gb231280': 'cp936',\n  'gb23121980': 'cp936',\n  'csgb2312': 'cp936',\n  'csiso58gb231280': 'cp936',\n  'euccn': 'cp936',\n  // Microsoft's CP936 is a subset and approximation of GBK.\n  'windows936': 'cp936',\n  'ms936': 'cp936',\n  '936': 'cp936',\n  'cp936': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp936.json');\n    }\n  },\n  // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n  'gbk': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp936.json').concat(require('./tables/gbk-added.json'));\n    }\n  },\n  'xgbk': 'gbk',\n  'isoir58': 'gbk',\n  // GB18030 is an algorithmic extension of GBK.\n  // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n  // http://icu-project.org/docs/papers/gb18030.html\n  // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n  // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n  'gb18030': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp936.json').concat(require('./tables/gbk-added.json'));\n    },\n    gb18030: function gb18030() {\n      return require('./tables/gb18030-ranges.json');\n    },\n    encodeSkipVals: [0x80],\n    encodeAdd: {\n      '€': 0xA2E3\n    }\n  },\n  'chinese': 'gb18030',\n  // == Korean ===============================================================\n  // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n  'windows949': 'cp949',\n  'ms949': 'cp949',\n  '949': 'cp949',\n  'cp949': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp949.json');\n    }\n  },\n  'cseuckr': 'cp949',\n  'csksc56011987': 'cp949',\n  'euckr': 'cp949',\n  'isoir149': 'cp949',\n  'korean': 'cp949',\n  'ksc56011987': 'cp949',\n  'ksc56011989': 'cp949',\n  'ksc5601': 'cp949',\n  // == Big5/Taiwan/Hong Kong ================================================\n  // There are lots of tables for Big5 and cp950. Please see the following links for history:\n  // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n  // Variations, in roughly number of defined chars:\n  //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n  //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n  //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n  //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n  //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n  //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n  //    Plus, it has 4 combining sequences.\n  //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n  //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n  //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n  //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n  //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n  //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n  //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n  //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n  // \n  // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n  // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n  'windows950': 'cp950',\n  'ms950': 'cp950',\n  '950': 'cp950',\n  'cp950': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp950.json');\n    }\n  },\n  // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n  'big5': 'big5hkscs',\n  'big5hkscs': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp950.json').concat(require('./tables/big5-added.json'));\n    },\n    encodeSkipVals: [0xa2cc]\n  },\n  'cnbig5': 'big5hkscs',\n  'csbig5': 'big5hkscs',\n  'xxbig5': 'big5hkscs'\n};","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\n\n\nmodule.exports = function (stream_module) {\n  var Transform = stream_module.Transform; // == Encoder stream =======================================================\n\n  function IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n\n    Transform.call(this, options);\n  }\n\n  IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: {\n      value: IconvLiteEncoderStream\n    }\n  });\n\n  IconvLiteEncoderStream.prototype._transform = function (chunk, encoding, done) {\n    if (typeof chunk != 'string') return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n\n    try {\n      var res = this.conv.write(chunk);\n      if (res && res.length) this.push(res);\n      done();\n    } catch (e) {\n      done(e);\n    }\n  };\n\n  IconvLiteEncoderStream.prototype._flush = function (done) {\n    try {\n      var res = this.conv.end();\n      if (res && res.length) this.push(res);\n      done();\n    } catch (e) {\n      done(e);\n    }\n  };\n\n  IconvLiteEncoderStream.prototype.collect = function (cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function (chunk) {\n      chunks.push(chunk);\n    });\n    this.on('end', function () {\n      cb(null, Buffer.concat(chunks));\n    });\n    return this;\n  }; // == Decoder stream =======================================================\n\n\n  function IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n\n    Transform.call(this, options);\n  }\n\n  IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: {\n      value: IconvLiteDecoderStream\n    }\n  });\n\n  IconvLiteDecoderStream.prototype._transform = function (chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array)) return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n\n    try {\n      var res = this.conv.write(chunk);\n      if (res && res.length) this.push(res, this.encoding);\n      done();\n    } catch (e) {\n      done(e);\n    }\n  };\n\n  IconvLiteDecoderStream.prototype._flush = function (done) {\n    try {\n      var res = this.conv.end();\n      if (res && res.length) this.push(res, this.encoding);\n      done();\n    } catch (e) {\n      done(e);\n    }\n  };\n\n  IconvLiteDecoderStream.prototype.collect = function (cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function (chunk) {\n      res += chunk;\n    });\n    this.on('end', function () {\n      cb(null, res);\n    });\n    return this;\n  };\n\n  return {\n    IconvLiteEncoderStream: IconvLiteEncoderStream,\n    IconvLiteDecoderStream: IconvLiteDecoderStream\n  };\n};","module.exports = __webpack_public_path__ + \"static/plus-51edc0d5a019292f2e0e87a1fa3e5e01.svg\";","\"use strict\"; // Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n  // Not supported by iconv, not sure why.\n  \"10029\": \"maccenteuro\",\n  \"maccenteuro\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n  },\n  \"808\": \"cp808\",\n  \"ibm808\": \"cp808\",\n  \"cp808\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n  },\n  \"mik\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"cp720\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\x80\\x81\\xE9\\xE2\\x84\\xE0\\x86\\xE7\\xEA\\xEB\\xE8\\xEF\\xEE\\x8D\\x8E\\x8F\\x90\\u0651\\u0652\\xF4\\xA4\\u0640\\xFB\\xF9\\u0621\\u0622\\u0623\\u0624\\xA3\\u0625\\u0626\\u0627\\u0628\\u0629\\u062A\\u062B\\u062C\\u062D\\u062E\\u062F\\u0630\\u0631\\u0632\\u0633\\u0634\\u0635\\xAB\\xBB\\u2591\\u2592\\u2593\\u2502\\u2524\\u2561\\u2562\\u2556\\u2555\\u2563\\u2551\\u2557\\u255D\\u255C\\u255B\\u2510\\u2514\\u2534\\u252C\\u251C\\u2500\\u253C\\u255E\\u255F\\u255A\\u2554\\u2569\\u2566\\u2560\\u2550\\u256C\\u2567\\u2568\\u2564\\u2565\\u2559\\u2558\\u2552\\u2553\\u256B\\u256A\\u2518\\u250C\\u2588\\u2584\\u258C\\u2590\\u2580\\u0636\\u0637\\u0638\\u0639\\u063A\\u0641\\xB5\\u0642\\u0643\\u0644\\u0645\\u0646\\u0647\\u0648\\u0649\\u064A\\u2261\\u064B\\u064C\\u064D\\u064E\\u064F\\u0650\\u2248\\xB0\\u2219\\xB7\\u221A\\u207F\\xB2\\u25A0\\xA0\"\n  },\n  // Aliases of generated encodings.\n  \"ascii8bit\": \"ascii\",\n  \"usascii\": \"ascii\",\n  \"ansix34\": \"ascii\",\n  \"ansix341968\": \"ascii\",\n  \"ansix341986\": \"ascii\",\n  \"csascii\": \"ascii\",\n  \"cp367\": \"ascii\",\n  \"ibm367\": \"ascii\",\n  \"isoir6\": \"ascii\",\n  \"iso646us\": \"ascii\",\n  \"iso646irv\": \"ascii\",\n  \"us\": \"ascii\",\n  \"latin1\": \"iso88591\",\n  \"latin2\": \"iso88592\",\n  \"latin3\": \"iso88593\",\n  \"latin4\": \"iso88594\",\n  \"latin5\": \"iso88599\",\n  \"latin6\": \"iso885910\",\n  \"latin7\": \"iso885913\",\n  \"latin8\": \"iso885914\",\n  \"latin9\": \"iso885915\",\n  \"latin10\": \"iso885916\",\n  \"csisolatin1\": \"iso88591\",\n  \"csisolatin2\": \"iso88592\",\n  \"csisolatin3\": \"iso88593\",\n  \"csisolatin4\": \"iso88594\",\n  \"csisolatincyrillic\": \"iso88595\",\n  \"csisolatinarabic\": \"iso88596\",\n  \"csisolatingreek\": \"iso88597\",\n  \"csisolatinhebrew\": \"iso88598\",\n  \"csisolatin5\": \"iso88599\",\n  \"csisolatin6\": \"iso885910\",\n  \"l1\": \"iso88591\",\n  \"l2\": \"iso88592\",\n  \"l3\": \"iso88593\",\n  \"l4\": \"iso88594\",\n  \"l5\": \"iso88599\",\n  \"l6\": \"iso885910\",\n  \"l7\": \"iso885913\",\n  \"l8\": \"iso885914\",\n  \"l9\": \"iso885915\",\n  \"l10\": \"iso885916\",\n  \"isoir14\": \"iso646jp\",\n  \"isoir57\": \"iso646cn\",\n  \"isoir100\": \"iso88591\",\n  \"isoir101\": \"iso88592\",\n  \"isoir109\": \"iso88593\",\n  \"isoir110\": \"iso88594\",\n  \"isoir144\": \"iso88595\",\n  \"isoir127\": \"iso88596\",\n  \"isoir126\": \"iso88597\",\n  \"isoir138\": \"iso88598\",\n  \"isoir148\": \"iso88599\",\n  \"isoir157\": \"iso885910\",\n  \"isoir166\": \"tis620\",\n  \"isoir179\": \"iso885913\",\n  \"isoir199\": \"iso885914\",\n  \"isoir203\": \"iso885915\",\n  \"isoir226\": \"iso885916\",\n  \"cp819\": \"iso88591\",\n  \"ibm819\": \"iso88591\",\n  \"cyrillic\": \"iso88595\",\n  \"arabic\": \"iso88596\",\n  \"arabic8\": \"iso88596\",\n  \"ecma114\": \"iso88596\",\n  \"asmo708\": \"iso88596\",\n  \"greek\": \"iso88597\",\n  \"greek8\": \"iso88597\",\n  \"ecma118\": \"iso88597\",\n  \"elot928\": \"iso88597\",\n  \"hebrew\": \"iso88598\",\n  \"hebrew8\": \"iso88598\",\n  \"turkish\": \"iso88599\",\n  \"turkish8\": \"iso88599\",\n  \"thai\": \"iso885911\",\n  \"thai8\": \"iso885911\",\n  \"celtic\": \"iso885914\",\n  \"celtic8\": \"iso885914\",\n  \"isoceltic\": \"iso885914\",\n  \"tis6200\": \"tis620\",\n  \"tis62025291\": \"tis620\",\n  \"tis62025330\": \"tis620\",\n  \"10000\": \"macroman\",\n  \"10006\": \"macgreek\",\n  \"10007\": \"maccyrillic\",\n  \"10079\": \"maciceland\",\n  \"10081\": \"macturkish\",\n  \"cspc8codepage437\": \"cp437\",\n  \"cspc775baltic\": \"cp775\",\n  \"cspc850multilingual\": \"cp850\",\n  \"cspcp852\": \"cp852\",\n  \"cspc862latinhebrew\": \"cp862\",\n  \"cpgr\": \"cp869\",\n  \"msee\": \"cp1250\",\n  \"mscyrl\": \"cp1251\",\n  \"msansi\": \"cp1252\",\n  \"msgreek\": \"cp1253\",\n  \"msturk\": \"cp1254\",\n  \"mshebr\": \"cp1255\",\n  \"msarab\": \"cp1256\",\n  \"winbaltrim\": \"cp1257\",\n  \"cp20866\": \"koi8r\",\n  \"20866\": \"koi8r\",\n  \"ibm878\": \"koi8r\",\n  \"cskoi8r\": \"koi8r\",\n  \"cp21866\": \"koi8u\",\n  \"21866\": \"koi8u\",\n  \"ibm1168\": \"koi8u\",\n  \"strk10482002\": \"rk1048\",\n  \"tcvn5712\": \"tcvn\",\n  \"tcvn57121\": \"tcvn\",\n  \"gb198880\": \"iso646cn\",\n  \"cn\": \"iso646cn\",\n  \"csiso14jisc6220ro\": \"iso646jp\",\n  \"jisc62201969ro\": \"iso646jp\",\n  \"jp\": \"iso646jp\",\n  \"cshproman8\": \"hproman8\",\n  \"r8\": \"hproman8\",\n  \"roman8\": \"hproman8\",\n  \"xroman8\": \"hproman8\",\n  \"ibm1051\": \"hproman8\",\n  \"mac\": \"macintosh\",\n  \"csmacintosh\": \"macintosh\"\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table-module--table--8ew8A\",\"tableContainer\":\"Table-module--table-container--2ykL6\",\"isScrollable\":\"Table-module--is-scrollable--1gAU-\",\"container\":\"Table-module--container--3NY9k\",\"isNotPaddedLeft\":\"Table-module--is-not-padded-left--1IThi\",\"isEqualWidth\":\"Table-module--is-equal-width--1HgsC\",\"isColored\":\"Table-module--is-colored--3YGI0\",\"titleContainer\":\"Table-module--title-container--1QboP\",\"isNotMarginTop\":\"Table-module--is-not-margin-top--1AmID\",\"buttonsContainer\":\"Table-module--buttons-container--32U2N\"};","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\n\nexports._sbcs = SBCSCodec;\n\nfunction SBCSCodec(codecOptions, iconv) {\n  if (!codecOptions) throw new Error(\"SBCS codec is called without the data.\"); // Prepare char buffer for decoding.\n\n  if (!codecOptions.chars || codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256) throw new Error(\"Encoding '\" + codecOptions.type + \"' has incorrect 'chars' (must be of len 128 or 256)\");\n\n  if (codecOptions.chars.length === 128) {\n    var asciiString = \"\";\n\n    for (var i = 0; i < 128; i++) {\n      asciiString += String.fromCharCode(i);\n    }\n\n    codecOptions.chars = asciiString + codecOptions.chars;\n  }\n\n  this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2'); // Encoding buffer.\n\n  var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n  for (var i = 0; i < codecOptions.chars.length; i++) {\n    encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n  }\n\n  this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\nfunction SBCSEncoder(options, codec) {\n  this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function (str) {\n  var buf = Buffer.alloc(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    buf[i] = this.encodeBuf[str.charCodeAt(i)];\n  }\n\n  return buf;\n};\n\nSBCSEncoder.prototype.end = function () {};\n\nfunction SBCSDecoder(options, codec) {\n  this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function (buf) {\n  // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n  var decodeBuf = this.decodeBuf;\n  var newBuf = Buffer.alloc(buf.length * 2);\n  var idx1 = 0,\n      idx2 = 0;\n\n  for (var i = 0; i < buf.length; i++) {\n    idx1 = buf[i] * 2;\n    idx2 = i * 2;\n    newBuf[idx2] = decodeBuf[idx1];\n    newBuf[idx2 + 1] = decodeBuf[idx1 + 1];\n  }\n\n  return newBuf.toString('ucs2');\n};\n\nSBCSDecoder.prototype.end = function () {};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n    case 'raw':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n\n      default:\n        if (retried) return; // undefined\n\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n}\n\n; // Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\n\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n} // StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\n\n\nexports.StringDecoder = StringDecoder;\n\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End; // Returns only complete characters in a Buffer\n\nStringDecoder.prototype.text = utf8Text; // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\n\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n}; // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\n\n\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n} // Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\n\n\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n\n    return nb;\n  }\n\n  return 0;\n} // Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\n\n\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return \"\\uFFFD\";\n  }\n\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return \"\\uFFFD\";\n    }\n\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return \"\\uFFFD\";\n      }\n    }\n  }\n} // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\n\n\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n} // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\n\n\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n} // For UTF-8, a replacement character is added when ending on a partial\n// character.\n\n\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + \"\\uFFFD\";\n  return r;\n} // UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\n\n\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n\n    return r;\n  }\n\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n} // For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\n\n\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n} // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\n\n\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","\"use strict\"; // Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\n\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\0\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\b\\t\\n\\x0B\\f\\r\\x0E\\x0F\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1A\\x1B\\x1C\\x1D\\x1E\\x1F !\\\"#$\\u066A&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7F\\xB0\\xB7\\u2219\\u221A\\u2592\\u2500\\u2502\\u253C\\u2524\\u252C\\u251C\\u2534\\u2510\\u250C\\u2514\\u2518\\u03B2\\u221E\\u03C6\\xB1\\xBD\\xBC\\u2248\\xAB\\xBB\\uFEF7\\uFEF8\\uFFFD\\uFFFD\\uFEFB\\uFEFC\\uFFFD\\xA0\\xAD\\uFE82\\xA3\\xA4\\uFE84\\uFFFD\\uFFFD\\uFE8E\\uFE8F\\uFE95\\uFE99\\u060C\\uFE9D\\uFEA1\\uFEA5\\u0660\\u0661\\u0662\\u0663\\u0664\\u0665\\u0666\\u0667\\u0668\\u0669\\uFED1\\u061B\\uFEB1\\uFEB5\\uFEB9\\u061F\\xA2\\uFE80\\uFE81\\uFE83\\uFE85\\uFECA\\uFE8B\\uFE8D\\uFE91\\uFE93\\uFE97\\uFE9B\\uFE9F\\uFEA3\\uFEA7\\uFEA9\\uFEAB\\uFEAD\\uFEAF\\uFEB3\\uFEB7\\uFEBB\\uFEBF\\uFEC1\\uFEC5\\uFECB\\uFECF\\xA6\\xAC\\xF7\\xD7\\uFEC9\\u0640\\uFED3\\uFED7\\uFEDB\\uFEDF\\uFEE3\\uFEE7\\uFEEB\\uFEED\\uFEEF\\uFEF3\\uFEBD\\uFECC\\uFECE\\uFECD\\uFEE1\\uFE7D\\u0651\\uFEE5\\uFEE9\\uFEEC\\uFEF0\\uFEF2\\uFED0\\uFED5\\uFEF5\\uFEF6\\uFEDD\\uFED9\\uFEF1\\u25A0\\uFFFD\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\0\\xDA\\u1EE4\\x03\\u1EEA\\u1EEC\\u1EEE\\x07\\b\\t\\n\\x0B\\f\\r\\x0E\\x0F\\x10\\u1EE8\\u1EF0\\u1EF2\\u1EF6\\u1EF8\\xDD\\u1EF4\\x18\\x19\\x1A\\x1B\\x1C\\x1D\\x1E\\x1F !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7F\\xC0\\u1EA2\\xC3\\xC1\\u1EA0\\u1EB6\\u1EAC\\xC8\\u1EBA\\u1EBC\\xC9\\u1EB8\\u1EC6\\xCC\\u1EC8\\u0128\\xCD\\u1ECA\\xD2\\u1ECE\\xD5\\xD3\\u1ECC\\u1ED8\\u1EDC\\u1EDE\\u1EE0\\u1EDA\\u1EE2\\xD9\\u1EE6\\u0168\\xA0\\u0102\\xC2\\xCA\\xD4\\u01A0\\u01AF\\u0110\\u0103\\xE2\\xEA\\xF4\\u01A1\\u01B0\\u0111\\u1EB0\\u0300\\u0309\\u0303\\u0301\\u0323\\xE0\\u1EA3\\xE3\\xE1\\u1EA1\\u1EB2\\u1EB1\\u1EB3\\u1EB5\\u1EAF\\u1EB4\\u1EAE\\u1EA6\\u1EA8\\u1EAA\\u1EA4\\u1EC0\\u1EB7\\u1EA7\\u1EA9\\u1EAB\\u1EA5\\u1EAD\\xE8\\u1EC2\\u1EBB\\u1EBD\\xE9\\u1EB9\\u1EC1\\u1EC3\\u1EC5\\u1EBF\\u1EC7\\xEC\\u1EC9\\u1EC4\\u1EBE\\u1ED2\\u0129\\xED\\u1ECB\\xF2\\u1ED4\\u1ECF\\xF5\\xF3\\u1ECD\\u1ED3\\u1ED5\\u1ED7\\u1ED1\\u1ED9\\u1EDD\\u1EDF\\u1EE1\\u1EDB\\u1EE3\\xF9\\u1ED6\\u1EE7\\u0169\\xFA\\u1EE5\\u1EEB\\u1EED\\u1EEF\\u1EE9\\u1EF1\\u1EF3\\u1EF7\\u1EF9\\xFD\\u1EF5\\u1ED0\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\0\\x01\\u1EB2\\x03\\x04\\u1EB4\\u1EAA\\x07\\b\\t\\n\\x0B\\f\\r\\x0E\\x0F\\x10\\x11\\x12\\x13\\u1EF6\\x15\\x16\\x17\\x18\\u1EF8\\x1A\\x1B\\x1C\\x1D\\u1EF4\\x1F !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7F\\u1EA0\\u1EAE\\u1EB0\\u1EB6\\u1EA4\\u1EA6\\u1EA8\\u1EAC\\u1EBC\\u1EB8\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EE2\\u1EDA\\u1EDC\\u1EDE\\u1ECA\\u1ECE\\u1ECC\\u1EC8\\u1EE6\\u0168\\u1EE4\\u1EF2\\xD5\\u1EAF\\u1EB1\\u1EB7\\u1EA5\\u1EA7\\u1EA9\\u1EAD\\u1EBD\\u1EB9\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1EE0\\u01A0\\u1ED9\\u1EDD\\u1EDF\\u1ECB\\u1EF0\\u1EE8\\u1EEA\\u1EEC\\u01A1\\u1EDB\\u01AF\\xC0\\xC1\\xC2\\xC3\\u1EA2\\u0102\\u1EB3\\u1EB5\\xC8\\xC9\\xCA\\u1EBA\\xCC\\xCD\\u0128\\u1EF3\\u0110\\u1EE9\\xD2\\xD3\\xD4\\u1EA1\\u1EF7\\u1EEB\\u1EED\\xD9\\xDA\\u1EF9\\u1EF5\\xDD\\u1EE1\\u01B0\\xE0\\xE1\\xE2\\xE3\\u1EA3\\u0103\\u1EEF\\u1EAB\\xE8\\xE9\\xEA\\u1EBB\\xEC\\xED\\u0129\\u1EC9\\u0111\\u1EF1\\xF2\\xF3\\xF4\\xF5\\u1ECF\\u1ECD\\u1EE5\\xF9\\xFA\\u0169\\u1EE7\\xFD\\u1EE3\\u1EEE\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\0\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\b\\t\\n\\x0B\\f\\r\\x0E\\x0F\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1A\\x1B\\x1C\\x1D\\x1E\\x1F !\\\"#\\xA5%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}\\u203E\\x7F\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\0\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\b\\t\\n\\x0B\\f\\r\\x0E\\x0F\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1A\\x1B\\x1C\\x1D\\x1E\\x1F !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\xA5]^_`abcdefghijklmnopqrstuvwxyz{|}\\u203E\\x7F\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n};","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer');\n\nvar Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\nfunction copyProps(src, dst) {\n  for (var key in src) {\n    dst[key] = src[key];\n  }\n}\n\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer;\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports);\n  exports.Buffer = SafeBuffer;\n}\n\nfunction SafeBuffer(arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length);\n} // Copy static methods from Buffer\n\n\ncopyProps(Buffer, SafeBuffer);\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number');\n  }\n\n  return Buffer(arg, encodingOrOffset, length);\n};\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  var buf = Buffer(size);\n\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n  } else {\n    buf.fill(0);\n  }\n\n  return buf;\n};\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return Buffer(size);\n};\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return buffer.SlowBuffer(size);\n};","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\n\nexports._dbcs = DBCSCodec;\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++) {\n  UNASSIGNED_NODE[i] = UNASSIGNED;\n} // Class DBCSCodec reads and initializes mapping tables.\n\n\nfunction DBCSCodec(codecOptions, iconv) {\n  this.encodingName = codecOptions.encodingName;\n  if (!codecOptions) throw new Error(\"DBCS codec is called without the data.\");\n  if (!codecOptions.table) throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\"); // Load tables.\n\n  var mappingTable = codecOptions.table(); // Decode tables: MBCS -> Unicode.\n  // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n  // Trie root is decodeTables[0].\n  // Values: >=  0 -> unicode character code. can be > 0xFFFF\n  //         == UNASSIGNED -> unknown/unassigned sequence.\n  //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n  //         <= NODE_START -> index of the next node in our trie to process next byte.\n  //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n\n  this.decodeTables = [];\n  this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n  // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n\n  this.decodeTableSeq = []; // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n\n  for (var i = 0; i < mappingTable.length; i++) {\n    this._addDecodeChunk(mappingTable[i]);\n  } // Load & create GB18030 tables when needed.\n\n\n  if (typeof codecOptions.gb18030 === 'function') {\n    this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n    // Add GB18030 common decode nodes.\n\n    var commonThirdByteNodeIdx = this.decodeTables.length;\n    this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n    var commonFourthByteNodeIdx = this.decodeTables.length;\n    this.decodeTables.push(UNASSIGNED_NODE.slice(0)); // Fill out the tree\n\n    var firstByteNode = this.decodeTables[0];\n\n    for (var i = 0x81; i <= 0xFE; i++) {\n      var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];\n\n      for (var j = 0x30; j <= 0x39; j++) {\n        if (secondByteNode[j] === UNASSIGNED) {\n          secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\n        } else if (secondByteNode[j] > NODE_START) {\n          throw new Error(\"gb18030 decode tables conflict at byte 2\");\n        }\n\n        var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];\n\n        for (var k = 0x81; k <= 0xFE; k++) {\n          if (thirdByteNode[k] === UNASSIGNED) {\n            thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;\n          } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {\n            continue;\n          } else if (thirdByteNode[k] > NODE_START) {\n            throw new Error(\"gb18030 decode tables conflict at byte 3\");\n          }\n\n          var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];\n\n          for (var l = 0x30; l <= 0x39; l++) {\n            if (fourthByteNode[l] === UNASSIGNED) fourthByteNode[l] = GB18030_CODE;\n          }\n        }\n      }\n    }\n  }\n\n  this.defaultCharUnicode = iconv.defaultCharUnicode; // Encode tables: Unicode -> DBCS.\n  // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n  // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n  // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n  //         == UNASSIGNED -> no conversion found. Output a default char.\n  //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n\n  this.encodeTable = []; // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n  // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n  // means end of sequence (needed when one sequence is a strict subsequence of another).\n  // Objects are kept separately from encodeTable to increase performance.\n\n  this.encodeTableSeq = []; // Some chars can be decoded, but need not be encoded.\n\n  var skipEncodeChars = {};\n  if (codecOptions.encodeSkipVals) for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n    var val = codecOptions.encodeSkipVals[i];\n    if (typeof val === 'number') skipEncodeChars[val] = true;else for (var j = val.from; j <= val.to; j++) {\n      skipEncodeChars[j] = true;\n    }\n  } // Use decode trie to recursively fill out encode tables.\n\n  this._fillEncodeTable(0, 0, skipEncodeChars); // Add more encoding pairs when needed.\n\n\n  if (codecOptions.encodeAdd) {\n    for (var uChar in codecOptions.encodeAdd) {\n      if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar)) this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n  }\n\n  this.defCharSB = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n  if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n  if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder; // Decoder helpers\n\nDBCSCodec.prototype._getDecodeTrieNode = function (addr) {\n  var bytes = [];\n\n  for (; addr > 0; addr >>>= 8) {\n    bytes.push(addr & 0xFF);\n  }\n\n  if (bytes.length == 0) bytes.push(0);\n  var node = this.decodeTables[0];\n\n  for (var i = bytes.length - 1; i > 0; i--) {\n    // Traverse nodes deeper into the trie.\n    var val = node[bytes[i]];\n\n    if (val == UNASSIGNED) {\n      // Create new node.\n      node[bytes[i]] = NODE_START - this.decodeTables.length;\n      this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n    } else if (val <= NODE_START) {\n      // Existing node.\n      node = this.decodeTables[NODE_START - val];\n    } else throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n  }\n\n  return node;\n};\n\nDBCSCodec.prototype._addDecodeChunk = function (chunk) {\n  // First element of chunk is the hex mbcs code where we start.\n  var curAddr = parseInt(chunk[0], 16); // Choose the decoding node where we'll write our chars.\n\n  var writeTable = this._getDecodeTrieNode(curAddr);\n\n  curAddr = curAddr & 0xFF; // Write all other elements of the chunk to the table.\n\n  for (var k = 1; k < chunk.length; k++) {\n    var part = chunk[k];\n\n    if (typeof part === \"string\") {\n      // String, write as-is.\n      for (var l = 0; l < part.length;) {\n        var code = part.charCodeAt(l++);\n\n        if (0xD800 <= code && code < 0xDC00) {\n          // Decode surrogate\n          var codeTrail = part.charCodeAt(l++);\n          if (0xDC00 <= codeTrail && codeTrail < 0xE000) writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);else throw new Error(\"Incorrect surrogate pair in \" + this.encodingName + \" at chunk \" + chunk[0]);\n        } else if (0x0FF0 < code && code <= 0x0FFF) {\n          // Character sequence (our own encoding used)\n          var len = 0xFFF - code + 2;\n          var seq = [];\n\n          for (var m = 0; m < len; m++) {\n            seq.push(part.charCodeAt(l++));\n          } // Simple variation: don't support surrogates or subsequences in seq.\n\n\n          writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n          this.decodeTableSeq.push(seq);\n        } else writeTable[curAddr++] = code; // Basic char\n\n      }\n    } else if (typeof part === \"number\") {\n      // Integer, meaning increasing sequence starting with prev character.\n      var charCode = writeTable[curAddr - 1] + 1;\n\n      for (var l = 0; l < part; l++) {\n        writeTable[curAddr++] = charCode++;\n      }\n    } else throw new Error(\"Incorrect type '\" + typeof part + \"' given in \" + this.encodingName + \" at chunk \" + chunk[0]);\n  }\n\n  if (curAddr > 0xFF) throw new Error(\"Incorrect chunk in \" + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}; // Encoder helpers\n\n\nDBCSCodec.prototype._getEncodeBucket = function (uCode) {\n  var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n\n  if (this.encodeTable[high] === undefined) this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n\n  return this.encodeTable[high];\n};\n\nDBCSCodec.prototype._setEncodeChar = function (uCode, dbcsCode) {\n  var bucket = this._getEncodeBucket(uCode);\n\n  var low = uCode & 0xFF;\n  if (bucket[low] <= SEQ_START) this.encodeTableSeq[SEQ_START - bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n  else if (bucket[low] == UNASSIGNED) bucket[low] = dbcsCode;\n};\n\nDBCSCodec.prototype._setEncodeSequence = function (seq, dbcsCode) {\n  // Get the root of character tree according to first character of the sequence.\n  var uCode = seq[0];\n\n  var bucket = this._getEncodeBucket(uCode);\n\n  var low = uCode & 0xFF;\n  var node;\n\n  if (bucket[low] <= SEQ_START) {\n    // There's already a sequence with  - use it.\n    node = this.encodeTableSeq[SEQ_START - bucket[low]];\n  } else {\n    // There was no sequence object - allocate a new one.\n    node = {};\n    if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n\n    bucket[low] = SEQ_START - this.encodeTableSeq.length;\n    this.encodeTableSeq.push(node);\n  } // Traverse the character tree, allocating new nodes as needed.\n\n\n  for (var j = 1; j < seq.length - 1; j++) {\n    var oldVal = node[uCode];\n    if (typeof oldVal === 'object') node = oldVal;else {\n      node = node[uCode] = {};\n      if (oldVal !== undefined) node[DEF_CHAR] = oldVal;\n    }\n  } // Set the leaf to given dbcsCode.\n\n\n  uCode = seq[seq.length - 1];\n  node[uCode] = dbcsCode;\n};\n\nDBCSCodec.prototype._fillEncodeTable = function (nodeIdx, prefix, skipEncodeChars) {\n  var node = this.decodeTables[nodeIdx];\n  var hasValues = false;\n  var subNodeEmpty = {};\n\n  for (var i = 0; i < 0x100; i++) {\n    var uCode = node[i];\n    var mbCode = prefix + i;\n    if (skipEncodeChars[mbCode]) continue;\n\n    if (uCode >= 0) {\n      this._setEncodeChar(uCode, mbCode);\n\n      hasValues = true;\n    } else if (uCode <= NODE_START) {\n      var subNodeIdx = NODE_START - uCode;\n\n      if (!subNodeEmpty[subNodeIdx]) {\n        // Skip empty subtrees (they are too large in gb18030).\n        var newPrefix = mbCode << 8 >>> 0; // NOTE: '>>> 0' keeps 32-bit num positive.\n\n        if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars)) hasValues = true;else subNodeEmpty[subNodeIdx] = true;\n      }\n    } else if (uCode <= SEQ_START) {\n      this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n\n      hasValues = true;\n    }\n  }\n\n  return hasValues;\n}; // == Encoder ==================================================================\n\n\nfunction DBCSEncoder(options, codec) {\n  // Encoder state\n  this.leadSurrogate = -1;\n  this.seqObj = undefined; // Static data\n\n  this.encodeTable = codec.encodeTable;\n  this.encodeTableSeq = codec.encodeTableSeq;\n  this.defaultCharSingleByte = codec.defCharSB;\n  this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function (str) {\n  var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n      leadSurrogate = this.leadSurrogate,\n      seqObj = this.seqObj,\n      nextChar = -1,\n      i = 0,\n      j = 0;\n\n  while (true) {\n    // 0. Get next character.\n    if (nextChar === -1) {\n      if (i == str.length) break;\n      var uCode = str.charCodeAt(i++);\n    } else {\n      var uCode = nextChar;\n      nextChar = -1;\n    } // 1. Handle surrogates.\n\n\n    if (0xD800 <= uCode && uCode < 0xE000) {\n      // Char is one of surrogates.\n      if (uCode < 0xDC00) {\n        // We've got lead surrogate.\n        if (leadSurrogate === -1) {\n          leadSurrogate = uCode;\n          continue;\n        } else {\n          leadSurrogate = uCode; // Double lead surrogate found.\n\n          uCode = UNASSIGNED;\n        }\n      } else {\n        // We've got trail surrogate.\n        if (leadSurrogate !== -1) {\n          uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n          leadSurrogate = -1;\n        } else {\n          // Incomplete surrogate pair - only trail surrogate found.\n          uCode = UNASSIGNED;\n        }\n      }\n    } else if (leadSurrogate !== -1) {\n      // Incomplete surrogate pair - only lead surrogate found.\n      nextChar = uCode;\n      uCode = UNASSIGNED; // Write an error, then current char.\n\n      leadSurrogate = -1;\n    } // 2. Convert uCode character.\n\n\n    var dbcsCode = UNASSIGNED;\n\n    if (seqObj !== undefined && uCode != UNASSIGNED) {\n      // We are in the middle of the sequence\n      var resCode = seqObj[uCode];\n\n      if (typeof resCode === 'object') {\n        // Sequence continues.\n        seqObj = resCode;\n        continue;\n      } else if (typeof resCode == 'number') {\n        // Sequence finished. Write it.\n        dbcsCode = resCode;\n      } else if (resCode == undefined) {\n        // Current character is not part of the sequence.\n        // Try default character for this sequence\n        resCode = seqObj[DEF_CHAR];\n\n        if (resCode !== undefined) {\n          dbcsCode = resCode; // Found. Write it.\n\n          nextChar = uCode; // Current character will be written too in the next iteration.\n        } else {// TODO: What if we have no default? (resCode == undefined)\n            // Then, we should write first char of the sequence as-is and try the rest recursively.\n            // Didn't do it for now because no encoding has this situation yet.\n            // Currently, just skip the sequence and write current char.\n          }\n      }\n\n      seqObj = undefined;\n    } else if (uCode >= 0) {\n      // Regular character\n      var subtable = this.encodeTable[uCode >> 8];\n      if (subtable !== undefined) dbcsCode = subtable[uCode & 0xFF];\n\n      if (dbcsCode <= SEQ_START) {\n        // Sequence start\n        seqObj = this.encodeTableSeq[SEQ_START - dbcsCode];\n        continue;\n      }\n\n      if (dbcsCode == UNASSIGNED && this.gb18030) {\n        // Use GB18030 algorithm to find character(s) to write.\n        var idx = findIdx(this.gb18030.uChars, uCode);\n\n        if (idx != -1) {\n          var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n          newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600);\n          dbcsCode = dbcsCode % 12600;\n          newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260);\n          dbcsCode = dbcsCode % 1260;\n          newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10);\n          dbcsCode = dbcsCode % 10;\n          newBuf[j++] = 0x30 + dbcsCode;\n          continue;\n        }\n      }\n    } // 3. Write dbcsCode character.\n\n\n    if (dbcsCode === UNASSIGNED) dbcsCode = this.defaultCharSingleByte;\n\n    if (dbcsCode < 0x100) {\n      newBuf[j++] = dbcsCode;\n    } else if (dbcsCode < 0x10000) {\n      newBuf[j++] = dbcsCode >> 8; // high byte\n\n      newBuf[j++] = dbcsCode & 0xFF; // low byte\n    } else if (dbcsCode < 0x1000000) {\n      newBuf[j++] = dbcsCode >> 16;\n      newBuf[j++] = dbcsCode >> 8 & 0xFF;\n      newBuf[j++] = dbcsCode & 0xFF;\n    } else {\n      newBuf[j++] = dbcsCode >>> 24;\n      newBuf[j++] = dbcsCode >>> 16 & 0xFF;\n      newBuf[j++] = dbcsCode >>> 8 & 0xFF;\n      newBuf[j++] = dbcsCode & 0xFF;\n    }\n  }\n\n  this.seqObj = seqObj;\n  this.leadSurrogate = leadSurrogate;\n  return newBuf.slice(0, j);\n};\n\nDBCSEncoder.prototype.end = function () {\n  if (this.leadSurrogate === -1 && this.seqObj === undefined) return; // All clean. Most often case.\n\n  var newBuf = Buffer.alloc(10),\n      j = 0;\n\n  if (this.seqObj) {\n    // We're in the sequence.\n    var dbcsCode = this.seqObj[DEF_CHAR];\n\n    if (dbcsCode !== undefined) {\n      // Write beginning of the sequence.\n      if (dbcsCode < 0x100) {\n        newBuf[j++] = dbcsCode;\n      } else {\n        newBuf[j++] = dbcsCode >> 8; // high byte\n\n        newBuf[j++] = dbcsCode & 0xFF; // low byte\n      }\n    } else {// See todo above.\n      }\n\n    this.seqObj = undefined;\n  }\n\n  if (this.leadSurrogate !== -1) {\n    // Incomplete surrogate pair - only lead surrogate found.\n    newBuf[j++] = this.defaultCharSingleByte;\n    this.leadSurrogate = -1;\n  }\n\n  return newBuf.slice(0, j);\n}; // Export for testing\n\n\nDBCSEncoder.prototype.findIdx = findIdx; // == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n  // Decoder state\n  this.nodeIdx = 0;\n  this.prevBytes = []; // Static data\n\n  this.decodeTables = codec.decodeTables;\n  this.decodeTableSeq = codec.decodeTableSeq;\n  this.defaultCharUnicode = codec.defaultCharUnicode;\n  this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function (buf) {\n  var newBuf = Buffer.alloc(buf.length * 2),\n      nodeIdx = this.nodeIdx,\n      prevBytes = this.prevBytes,\n      prevOffset = this.prevBytes.length,\n      seqStart = -this.prevBytes.length,\n      // idx of the start of current parsed sequence.\n  uCode;\n\n  for (var i = 0, j = 0; i < buf.length; i++) {\n    var curByte = i >= 0 ? buf[i] : prevBytes[i + prevOffset]; // Lookup in current trie node.\n\n    var uCode = this.decodeTables[nodeIdx][curByte];\n\n    if (uCode >= 0) {// Normal character, just use it.\n    } else if (uCode === UNASSIGNED) {\n      // Unknown char.\n      // TODO: Callback with seq.\n      uCode = this.defaultCharUnicode.charCodeAt(0);\n      i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\n    } else if (uCode === GB18030_CODE) {\n      if (i >= 3) {\n        var ptr = (buf[i - 3] - 0x81) * 12600 + (buf[i - 2] - 0x30) * 1260 + (buf[i - 1] - 0x81) * 10 + (curByte - 0x30);\n      } else {\n        var ptr = (prevBytes[i - 3 + prevOffset] - 0x81) * 12600 + ((i - 2 >= 0 ? buf[i - 2] : prevBytes[i - 2 + prevOffset]) - 0x30) * 1260 + ((i - 1 >= 0 ? buf[i - 1] : prevBytes[i - 1 + prevOffset]) - 0x81) * 10 + (curByte - 0x30);\n      }\n\n      var idx = findIdx(this.gb18030.gbChars, ptr);\n      uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n    } else if (uCode <= NODE_START) {\n      // Go to next trie node.\n      nodeIdx = NODE_START - uCode;\n      continue;\n    } else if (uCode <= SEQ_START) {\n      // Output a sequence of chars.\n      var seq = this.decodeTableSeq[SEQ_START - uCode];\n\n      for (var k = 0; k < seq.length - 1; k++) {\n        uCode = seq[k];\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n      }\n\n      uCode = seq[seq.length - 1];\n    } else throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte); // Write the character to buffer, handling higher planes using surrogate pair.\n\n\n    if (uCode >= 0x10000) {\n      uCode -= 0x10000;\n      var uCodeLead = 0xD800 | uCode >> 10;\n      newBuf[j++] = uCodeLead & 0xFF;\n      newBuf[j++] = uCodeLead >> 8;\n      uCode = 0xDC00 | uCode & 0x3FF;\n    }\n\n    newBuf[j++] = uCode & 0xFF;\n    newBuf[j++] = uCode >> 8; // Reset trie node.\n\n    nodeIdx = 0;\n    seqStart = i + 1;\n  }\n\n  this.nodeIdx = nodeIdx;\n  this.prevBytes = seqStart >= 0 ? Array.prototype.slice.call(buf, seqStart) : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\n  return newBuf.slice(0, j).toString('ucs2');\n};\n\nDBCSDecoder.prototype.end = function () {\n  var ret = ''; // Try to parse all remaining chars.\n\n  while (this.prevBytes.length > 0) {\n    // Skip 1 character in the buffer.\n    ret += this.defaultCharUnicode;\n    var bytesArr = this.prevBytes.slice(1); // Parse remaining as usual.\n\n    this.prevBytes = [];\n    this.nodeIdx = 0;\n    if (bytesArr.length > 0) ret += this.write(bytesArr);\n  }\n\n  this.prevBytes = [];\n  this.nodeIdx = 0;\n  return ret;\n}; // Binary search for GB18030. Returns largest i such that table[i] <= val.\n\n\nfunction findIdx(table, val) {\n  if (table[0] > val) return -1;\n  var l = 0,\n      r = table.length;\n\n  while (l < r - 1) {\n    // always table[l] <= val < table[r]\n    var mid = l + (r - l + 1 >> 1);\n    if (table[mid] <= val) l = mid;else r = mid;\n  }\n\n  return l;\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","\"use strict\"; // Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\n\nvar modules = [require(\"./internal\"), require(\"./utf32\"), require(\"./utf16\"), require(\"./utf7\"), require(\"./sbcs-codec\"), require(\"./sbcs-data\"), require(\"./sbcs-data-generated\"), require(\"./dbcs-codec\"), require(\"./dbcs-data\")]; // Put all encoding/alias/codec definitions to single object and export it.\n\nfor (var i = 0; i < modules.length; i++) {\n  var module = modules[i];\n\n  for (var enc in module) {\n    if (Object.prototype.hasOwnProperty.call(module, enc)) exports[enc] = module[enc];\n  }\n}","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n// == UTF16-BE codec. ==========================================================\n\n\nexports.utf16be = Utf16BECodec;\n\nfunction Utf16BECodec() {}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true; // -- Encoding\n\nfunction Utf16BEEncoder() {}\n\nUtf16BEEncoder.prototype.write = function (str) {\n  var buf = Buffer.from(str, 'ucs2');\n\n  for (var i = 0; i < buf.length; i += 2) {\n    var tmp = buf[i];\n    buf[i] = buf[i + 1];\n    buf[i + 1] = tmp;\n  }\n\n  return buf;\n};\n\nUtf16BEEncoder.prototype.end = function () {}; // -- Decoding\n\n\nfunction Utf16BEDecoder() {\n  this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function (buf) {\n  if (buf.length == 0) return '';\n  var buf2 = Buffer.alloc(buf.length + 1),\n      i = 0,\n      j = 0;\n\n  if (this.overflowByte !== -1) {\n    buf2[0] = buf[0];\n    buf2[1] = this.overflowByte;\n    i = 1;\n    j = 2;\n  }\n\n  for (; i < buf.length - 1; i += 2, j += 2) {\n    buf2[j] = buf[i + 1];\n    buf2[j + 1] = buf[i];\n  }\n\n  this.overflowByte = i == buf.length - 1 ? buf[buf.length - 1] : -1;\n  return buf2.slice(0, j).toString('ucs2');\n};\n\nUtf16BEDecoder.prototype.end = function () {\n  this.overflowByte = -1;\n}; // == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\n\nexports.utf16 = Utf16Codec;\n\nfunction Utf16Codec(codecOptions, iconv) {\n  this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder; // -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n  options = options || {};\n  if (options.addBOM === undefined) options.addBOM = true;\n  this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function (str) {\n  return this.encoder.write(str);\n};\n\nUtf16Encoder.prototype.end = function () {\n  return this.encoder.end();\n}; // -- Decoding\n\n\nfunction Utf16Decoder(options, codec) {\n  this.decoder = null;\n  this.initialBufs = [];\n  this.initialBufsLen = 0;\n  this.options = options || {};\n  this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function (buf) {\n  if (!this.decoder) {\n    // Codec is not chosen yet. Accumulate initial bytes.\n    this.initialBufs.push(buf);\n    this.initialBufsLen += buf.length;\n    if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)\n      return ''; // We have enough bytes -> detect endianness.\n\n    var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n    this.decoder = this.iconv.getDecoder(encoding, this.options);\n    var resStr = '';\n\n    for (var i = 0; i < this.initialBufs.length; i++) {\n      resStr += this.decoder.write(this.initialBufs[i]);\n    }\n\n    this.initialBufs.length = this.initialBufsLen = 0;\n    return resStr;\n  }\n\n  return this.decoder.write(buf);\n};\n\nUtf16Decoder.prototype.end = function () {\n  if (!this.decoder) {\n    var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n    this.decoder = this.iconv.getDecoder(encoding, this.options);\n    var resStr = '';\n\n    for (var i = 0; i < this.initialBufs.length; i++) {\n      resStr += this.decoder.write(this.initialBufs[i]);\n    }\n\n    var trail = this.decoder.end();\n    if (trail) resStr += trail;\n    this.initialBufs.length = this.initialBufsLen = 0;\n    return resStr;\n  }\n\n  return this.decoder.end();\n};\n\nfunction detectEncoding(bufs, defaultEncoding) {\n  var b = [];\n  var charsProcessed = 0;\n  var asciiCharsLE = 0,\n      asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\n\n  outer_loop: for (var i = 0; i < bufs.length; i++) {\n    var buf = bufs[i];\n\n    for (var j = 0; j < buf.length; j++) {\n      b.push(buf[j]);\n\n      if (b.length === 2) {\n        if (charsProcessed === 0) {\n          // Check BOM first.\n          if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';\n          if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';\n        }\n\n        if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\n        if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\n        b.length = 0;\n        charsProcessed++;\n\n        if (charsProcessed >= 100) {\n          break outer_loop;\n        }\n      }\n    }\n  } // Make decisions.\n  // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n  // So, we count ASCII as if it was LE or BE, and decide from that.\n\n\n  if (asciiCharsBE > asciiCharsLE) return 'utf-16be';\n  if (asciiCharsBE < asciiCharsLE) return 'utf-16le'; // Couldn't decide (likely all zeros or not enough data).\n\n  return defaultEncoding || 'utf-16le';\n}","import React, { PureComponent } from \"react\";\nimport classes from \"./TableRow.module.css\";\nimport cn from \"clsx\";\nimport Typography from \"src/components/ui-kit/Typography\";\nimport { WithLocale, withLocale } from \"react-targem\";\n\ninterface TableRowProps extends WithLocale {\n  values: {\n    value: React.ReactNode;\n    key: string;\n  }[];\n  isAccordion: boolean;\n  columnsCount: number;\n  isOpened: boolean;\n  onClick: () => void;\n}\n\nclass TableRow extends PureComponent<TableRowProps> {\n  render(): React.ReactNode {\n    const { values, columnsCount, isAccordion, onClick, isOpened } = this.props;\n\n    return (\n      <tr\n        onClick={isAccordion ? onClick : undefined}\n        className={cn({\n          [classes.rowAccordion]: isAccordion,\n          [classes.isRegular]: !isAccordion,\n          [classes.isClosed]: !isOpened,\n        })}\n      >\n        {values.map((v) => (\n          <td key={v.key} colSpan={isAccordion ? columnsCount : undefined}>\n            {this.getAccrodionButton()}\n            <Typography\n              isUpperCased={isAccordion}\n              isCapitalized={!isAccordion}\n              component=\"span\"\n            >\n              {isAccordion ? <b>{v.value}</b> : v.value}\n            </Typography>\n          </td>\n        ))}\n      </tr>\n    );\n  }\n\n  getAccrodionButton = (): React.ReactNode => {\n    const { isOpened, t, isAccordion } = this.props;\n    if (!isAccordion) {\n      return null;\n    }\n    return isOpened ? (\n      <button\n        tabIndex={-1}\n        title={t(\"Закрыть скрытый контент\")}\n        className={cn(classes.collapseIconButton)}\n      >\n        <img src={require(\"./assets/minus.svg\")} alt={t(\"Иконка минус\")} />\n      </button>\n    ) : (\n      <button\n        tabIndex={-1}\n        title={t(\"Открыть скрытый контент\")}\n        className={cn(classes.collapseIconButton)}\n      >\n        <img src={require(\"./assets/plus.svg\")} alt={t(\"Иконка плюс\")} />\n      </button>\n    );\n  };\n}\n\nexport default withLocale(TableRow);\n","import TableRow from \"./TableRow.container\";\nexport default TableRow;\n","import React, { useState } from \"react\";\nimport TableRow from \"./TableRow\";\n\ninterface TableRowContainerProps\n  extends Omit<React.ComponentProps<typeof TableRow>, \"isOpened\" | \"onClick\"> {}\n\nconst TableRowContainer: React.SFC<TableRowContainerProps> = (\n  props: TableRowContainerProps\n) => {\n  const [isOpened, setOpened] = useState<boolean>(true);\n  const toggleOpened = () => setOpened((v) => !v);\n  return <TableRow {...props} isOpened={isOpened} onClick={toggleOpened} />;\n};\nexport default TableRowContainer;\n","import React, { PureComponent } from \"react\";\nimport classes from \"./Table.module.css\";\nimport cn from \"clsx\";\nimport Typography from \"src/components/ui-kit/Typography\";\nimport EmbedModal from \"src/components/EmbedModal\";\nimport DownloadButton from \"src/components/DownloadButton\";\nimport TableRow from \"./components/TableRow\";\nimport { Menu, MenuItem } from \"src/components/Menu\";\n\ninterface TableProps {\n  title: string;\n  tables: {\n    columns: {\n      title: string;\n      key: string;\n      isHidden?: boolean;\n    }[];\n    rows: {\n      values: {\n        value: string | number;\n        key: string;\n      }[];\n      key: string;\n      isAccordion?: boolean;\n    }[];\n    title?: React.ReactNode;\n  }[];\n  isEqualWidth?: boolean;\n  isNotPaddedLeft?: boolean;\n  isNotMarginTop?: boolean;\n  isColored?: boolean;\n  hideEmbed?: boolean;\n  onDownloadButtonClick?: () => void;\n  onTableTitleClick?: (i: number) => () => void;\n  activeTableIndex: number;\n  downloadFilename?: string;\n  iframePath?: string;\n  isScrollable?: boolean;\n}\n\nclass Table extends PureComponent<TableProps> {\n  render(): React.ReactNode {\n    const {\n      title,\n      tables,\n      iframePath,\n      onDownloadButtonClick,\n      onTableTitleClick,\n      activeTableIndex,\n      isNotPaddedLeft,\n      isNotMarginTop,\n      isEqualWidth,\n      isColored,\n      hideEmbed,\n      isScrollable,\n    } = this.props;\n\n    const { rows, columns } = tables[activeTableIndex];\n\n    return (\n      <div\n        className={cn(classes.container, {\n          [classes.isNotPaddedLeft]: isNotPaddedLeft,\n        })}\n      >\n        <div\n          className={cn(classes.titleContainer, {\n            [classes.isNotMarginTop]: isNotMarginTop,\n          })}\n        >\n          <Typography variant=\"h3\">\n            <b>{title}</b>\n          </Typography>\n          {!hideEmbed && iframePath ? (\n            <div className={cn(classes.buttonsContainer)}>\n              <EmbedModal title={title} type=\"table\" iframePath={iframePath} />\n              <DownloadButton\n                type=\"table\"\n                title={title}\n                onClick={\n                  onDownloadButtonClick ? onDownloadButtonClick : () => false\n                }\n              />\n            </div>\n          ) : null}\n        </div>\n        {tables.length > 1 ? (\n          <Menu variant=\"default\">\n            {tables.map((t, i) => (\n              <MenuItem\n                key={i}\n                isActive={i === activeTableIndex}\n                onClick={onTableTitleClick && onTableTitleClick(i)}\n              >\n                {t.title}\n              </MenuItem>\n            ))}\n          </Menu>\n        ) : null}\n\n        <div\n          className={cn(classes.tableContainer, {\n            [classes.isScrollable]: isScrollable,\n          })}\n        >\n          <table\n            className={cn(classes.table, {\n              [classes.isEqualWidth]: isEqualWidth,\n              [classes.isColored]: isColored,\n            })}\n          >\n            <thead>\n              <tr>\n                {columns.map((c) =>\n                  !c.isHidden ? (\n                    <th key={c.key}>\n                      <Typography isUpperCased component=\"span\">\n                        <b>\n                          <small>{c.title}</small>\n                        </b>\n                      </Typography>\n                    </th>\n                  ) : null\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {rows.map((r) => (\n                <TableRow\n                  isAccordion={Boolean(r.isAccordion)}\n                  columnsCount={columns.length}\n                  values={r.values}\n                  key={r.key}\n                />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React, { PureComponent } from \"react\";\nimport Table from \"./Table\";\nimport { saveAs } from \"file-saver\";\nimport { getCsv } from \"src/utils/csv\";\n\ninterface TableContainerProps\n  extends Omit<\n    React.ComponentProps<typeof Table>,\n    \"onDownloadButtonClick\" | \"onTableTitleClick\" | \"activeTableIndex\"\n  > {}\ninterface TableContainerState {\n  activeTableIndex: number;\n}\n\nclass TableContainer extends PureComponent<\n  TableContainerProps,\n  TableContainerState\n> {\n  public state: TableContainerState = {\n    activeTableIndex: 0,\n  };\n\n  render(): React.ReactNode {\n    return (\n      <Table\n        onDownloadButtonClick={this.handleDownloadButtonClick}\n        activeTableIndex={this.state.activeTableIndex}\n        onTableTitleClick={this.hanldeTableTitleClick}\n        {...this.props}\n      ></Table>\n    );\n  }\n\n  private handleDownloadButtonClick = () => {\n    const { tables } = this.props;\n    const { activeTableIndex } = this.state;\n    const csvContent = getCsv(tables, activeTableIndex);\n    saveAs(csvContent, `${this.props.downloadFilename}.csv`);\n  };\n\n  private hanldeTableTitleClick = (index: number) => () => {\n    this.setState({\n      activeTableIndex: index,\n    });\n  };\n}\n\nexport default TableContainer;\n","import Table from \"./Table.container\";\nexport default Table;\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports; // All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\n\n\niconv.encodings = null; // Characters emitted in case of error.\n\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?'; // Public API.\n\niconv.encode = function encode(str, encoding, options) {\n  str = \"\" + (str || \"\"); // Ensure string.\n\n  var encoder = iconv.getEncoder(encoding, options);\n  var res = encoder.write(str);\n  var trail = encoder.end();\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\n};\n\niconv.decode = function decode(buf, encoding, options) {\n  if (typeof buf === 'string') {\n    if (!iconv.skipDecodeWarning) {\n      console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n      iconv.skipDecodeWarning = true;\n    }\n\n    buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n  }\n\n  var decoder = iconv.getDecoder(encoding, options);\n  var res = decoder.write(buf);\n  var trail = decoder.end();\n  return trail ? res + trail : res;\n};\n\niconv.encodingExists = function encodingExists(enc) {\n  try {\n    iconv.getCodec(enc);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}; // Legacy aliases to convert functions\n\n\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode; // Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\n\niconv._codecDataCache = {};\n\niconv.getCodec = function getCodec(encoding) {\n  if (!iconv.encodings) iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n  // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n\n  var enc = iconv._canonicalizeEncoding(encoding); // Traverse iconv.encodings to find actual codec.\n\n\n  var codecOptions = {};\n\n  while (true) {\n    var codec = iconv._codecDataCache[enc];\n    if (codec) return codec;\n    var codecDef = iconv.encodings[enc];\n\n    switch (typeof codecDef) {\n      case \"string\":\n        // Direct alias to other encoding.\n        enc = codecDef;\n        break;\n\n      case \"object\":\n        // Alias with options. Can be layered.\n        for (var key in codecDef) {\n          codecOptions[key] = codecDef[key];\n        }\n\n        if (!codecOptions.encodingName) codecOptions.encodingName = enc;\n        enc = codecDef.type;\n        break;\n\n      case \"function\":\n        // Codec itself.\n        if (!codecOptions.encodingName) codecOptions.encodingName = enc; // The codec function must load all tables and return object with .encoder and .decoder methods.\n        // It'll be called only once (for each different options object).\n\n        codec = new codecDef(codecOptions, iconv);\n        iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n\n        return codec;\n\n      default:\n        throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\" + enc + \"')\");\n    }\n  }\n};\n\niconv._canonicalizeEncoding = function (encoding) {\n  // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n  return ('' + encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n};\n\niconv.getEncoder = function getEncoder(encoding, options) {\n  var codec = iconv.getCodec(encoding),\n      encoder = new codec.encoder(options, codec);\n  if (codec.bomAware && options && options.addBOM) encoder = new bomHandling.PrependBOM(encoder, options);\n  return encoder;\n};\n\niconv.getDecoder = function getDecoder(encoding, options) {\n  var codec = iconv.getCodec(encoding),\n      decoder = new codec.decoder(options, codec);\n  if (codec.bomAware && !(options && options.stripBOM === false)) decoder = new bomHandling.StripBOM(decoder, options);\n  return decoder;\n}; // Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\n\n\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\n  if (iconv.supportsStreams) return; // Dependency-inject stream module to create IconvLite stream classes.\n\n  var streams = require(\"./streams\")(stream_module); // Not public API yet, but expose the stream classes.\n\n\n  iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n  iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream; // Streaming API.\n\n  iconv.encodeStream = function encodeStream(encoding, options) {\n    return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n  };\n\n  iconv.decodeStream = function decodeStream(encoding, options) {\n    return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n  };\n\n  iconv.supportsStreams = true;\n}; // Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\n\n\nvar stream_module;\n\ntry {\n  stream_module = require(\"stream\");\n} catch (e) {}\n\nif (stream_module && stream_module.Transform) {\n  iconv.enableStreamingAPI(stream_module);\n} else {\n  // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n  iconv.encodeStream = iconv.decodeStream = function () {\n    throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\n  };\n}\n\nif (\"Ā\" != \"\\u0100\") {\n  console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowAccordion\":\"TableRow-module--row-accordion--3uAQ9\",\"isClosed\":\"TableRow-module--is-closed--1Tlrm\",\"isRegular\":\"TableRow-module--is-regular--1h_V_\",\"collapseIconButton\":\"TableRow-module--collapse-icon-button--2ZPdG\"};","module.exports = __webpack_public_path__ + \"static/minus-8c67a140507429a36d66c2a789150521.svg\";","\"use strict\";\n\nvar BOMChar = \"\\uFEFF\";\nexports.PrependBOM = PrependBOMWrapper;\n\nfunction PrependBOMWrapper(encoder, options) {\n  this.encoder = encoder;\n  this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function (str) {\n  if (this.addBOM) {\n    str = BOMChar + str;\n    this.addBOM = false;\n  }\n\n  return this.encoder.write(str);\n};\n\nPrependBOMWrapper.prototype.end = function () {\n  return this.encoder.end();\n}; //------------------------------------------------------------------------------\n\n\nexports.StripBOM = StripBOMWrapper;\n\nfunction StripBOMWrapper(decoder, options) {\n  this.decoder = decoder;\n  this.pass = false;\n  this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function (buf) {\n  var res = this.decoder.write(buf);\n  if (this.pass || !res) return res;\n\n  if (res[0] === BOMChar) {\n    res = res.slice(1);\n    if (typeof this.options.stripBOM === 'function') this.options.stripBOM();\n  }\n\n  this.pass = true;\n  return res;\n};\n\nStripBOMWrapper.prototype.end = function () {\n  return this.decoder.end();\n};","/* eslint-disable node/no-deprecated-api */\n'use strict';\n\nvar buffer = require('buffer');\n\nvar Buffer = buffer.Buffer;\nvar safer = {};\nvar key;\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue;\n  if (key === 'SlowBuffer' || key === 'Buffer') continue;\n  safer[key] = buffer[key];\n}\n\nvar Safer = safer.Buffer = {};\n\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue;\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue;\n  Safer[key] = Buffer[key];\n}\n\nsafer.Buffer.prototype = Buffer.prototype;\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value);\n    }\n\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value);\n    }\n\n    return Buffer(value, encodingOrOffset, length);\n  };\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size);\n    }\n\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n\n    var buf = Buffer(size);\n\n    if (!fill || fill.length === 0) {\n      buf.fill(0);\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n\n    return buf;\n  };\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength;\n  } catch (e) {// we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  };\n\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength;\n  }\n}\n\nmodule.exports = safer;","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\n\nfunction Utf7Codec(codecOptions, iconv) {\n  this.iconv = iconv;\n}\n\n;\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true; // -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n  this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function (str) {\n  // Naive implementation.\n  // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n  return Buffer.from(str.replace(nonDirectChars, function (chunk) {\n    return \"+\" + (chunk === '+' ? '' : this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) + \"-\";\n  }.bind(this)));\n};\n\nUtf7Encoder.prototype.end = function () {}; // -- Decoding\n\n\nfunction Utf7Decoder(options, codec) {\n  this.iconv = codec.iconv;\n  this.inBase64 = false;\n  this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\n\nfor (var i = 0; i < 256; i++) {\n  base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n}\n\nvar plusChar = '+'.charCodeAt(0),\n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function (buf) {\n  var res = \"\",\n      lastI = 0,\n      inBase64 = this.inBase64,\n      base64Accum = this.base64Accum; // The decoder is more involved as we must handle chunks in stream.\n\n  for (var i = 0; i < buf.length; i++) {\n    if (!inBase64) {\n      // We're in direct mode.\n      // Write direct chars until '+'\n      if (buf[i] == plusChar) {\n        res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n\n        lastI = i + 1;\n        inBase64 = true;\n      }\n    } else {\n      // We decode base64.\n      if (!base64Chars[buf[i]]) {\n        // Base64 ended.\n        if (i == lastI && buf[i] == minusChar) {\n          // \"+-\" -> \"+\"\n          res += \"+\";\n        } else {\n          var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n          res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n        }\n\n        if (buf[i] != minusChar) // Minus is absorbed after base64.\n          i--;\n        lastI = i + 1;\n        inBase64 = false;\n        base64Accum = '';\n      }\n    }\n  }\n\n  if (!inBase64) {\n    res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n  } else {\n    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\");\n    var canBeDecoded = b64str.length - b64str.length % 8; // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n\n    base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n\n    b64str = b64str.slice(0, canBeDecoded);\n    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n  }\n\n  this.inBase64 = inBase64;\n  this.base64Accum = base64Accum;\n  return res;\n};\n\nUtf7Decoder.prototype.end = function () {\n  var res = \"\";\n  if (this.inBase64 && this.base64Accum.length > 0) res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n  this.inBase64 = false;\n  this.base64Accum = '';\n  return res;\n}; // UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\n\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n  this.iconv = iconv;\n}\n\n;\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true; // -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n  this.iconv = codec.iconv;\n  this.inBase64 = false;\n  this.base64Accum = Buffer.alloc(6);\n  this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function (str) {\n  var inBase64 = this.inBase64,\n      base64Accum = this.base64Accum,\n      base64AccumIdx = this.base64AccumIdx,\n      buf = Buffer.alloc(str.length * 5 + 10),\n      bufIdx = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    var uChar = str.charCodeAt(i);\n\n    if (0x20 <= uChar && uChar <= 0x7E) {\n      // Direct character or '&'.\n      if (inBase64) {\n        if (base64AccumIdx > 0) {\n          bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n          base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n\n        inBase64 = false;\n      }\n\n      if (!inBase64) {\n        buf[bufIdx++] = uChar; // Write direct character\n\n        if (uChar === andChar) // Ampersand -> '&-'\n          buf[bufIdx++] = minusChar;\n      }\n    } else {\n      // Non-direct character\n      if (!inBase64) {\n        buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n\n        inBase64 = true;\n      }\n\n      if (inBase64) {\n        base64Accum[base64AccumIdx++] = uChar >> 8;\n        base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n        if (base64AccumIdx == base64Accum.length) {\n          bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n          base64AccumIdx = 0;\n        }\n      }\n    }\n  }\n\n  this.inBase64 = inBase64;\n  this.base64AccumIdx = base64AccumIdx;\n  return buf.slice(0, bufIdx);\n};\n\nUtf7IMAPEncoder.prototype.end = function () {\n  var buf = Buffer.alloc(10),\n      bufIdx = 0;\n\n  if (this.inBase64) {\n    if (this.base64AccumIdx > 0) {\n      bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n      this.base64AccumIdx = 0;\n    }\n\n    buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n\n    this.inBase64 = false;\n  }\n\n  return buf.slice(0, bufIdx);\n}; // -- Decoding\n\n\nfunction Utf7IMAPDecoder(options, codec) {\n  this.iconv = codec.iconv;\n  this.inBase64 = false;\n  this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function (buf) {\n  var res = \"\",\n      lastI = 0,\n      inBase64 = this.inBase64,\n      base64Accum = this.base64Accum; // The decoder is more involved as we must handle chunks in stream.\n  // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n  for (var i = 0; i < buf.length; i++) {\n    if (!inBase64) {\n      // We're in direct mode.\n      // Write direct chars until '&'\n      if (buf[i] == andChar) {\n        res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n\n        lastI = i + 1;\n        inBase64 = true;\n      }\n    } else {\n      // We decode base64.\n      if (!base64IMAPChars[buf[i]]) {\n        // Base64 ended.\n        if (i == lastI && buf[i] == minusChar) {\n          // \"&-\" -> \"&\"\n          res += \"&\";\n        } else {\n          var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\").replace(/,/g, '/');\n          res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n        }\n\n        if (buf[i] != minusChar) // Minus may be absorbed after base64.\n          i--;\n        lastI = i + 1;\n        inBase64 = false;\n        base64Accum = '';\n      }\n    }\n  }\n\n  if (!inBase64) {\n    res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n  } else {\n    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\").replace(/,/g, '/');\n    var canBeDecoded = b64str.length - b64str.length % 8; // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n\n    base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n\n    b64str = b64str.slice(0, canBeDecoded);\n    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n  }\n\n  this.inBase64 = inBase64;\n  this.base64Accum = base64Accum;\n  return res;\n};\n\nUtf7IMAPDecoder.prototype.end = function () {\n  var res = \"\";\n  if (this.inBase64 && this.base64Accum.length > 0) res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n  this.inBase64 = false;\n  this.base64Accum = '';\n  return res;\n};"],"sourceRoot":""}